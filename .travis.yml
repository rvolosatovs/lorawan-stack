language: go
go:
- "1.11.x"
conditions: v1
if: type = pull_request OR branch =~ master$
env:
  global:
  - YARN_CACHE_FOLDER=$HOME/.cache/yarn
matrix:
  include:
    - env: RUNTYPE=js
    - env: RUNTYPE=go.lint
    - env: RUNTYPE=go.test.amd64
    - if: type = pull_request
      env: RUNTYPE=go.test.386
    - if: type = pull_request OR branch =~ master$
      env: RUNTYPE=build-all
go_import_path: go.thethings.network/lorawan-stack
sudo: required
services:
- docker
cache:
  directories:
  - $HOME/.cache/go-build
  - $HOME/.cache/yarn
  - $GOPATH/pkg/mod
before_install:
- |
  if [[ $RUNTYPE == go.test.amd64 || $RUNTYPE == go.test.386 ]]
  then
    sudo rm /usr/local/bin/docker-compose
    curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` > docker-compose
    chmod +x docker-compose
    sudo mv docker-compose /usr/local/bin
  fi
- if [[ ! -z "$encrypted_fc3d5d829302_key" ]]; then openssl aes-256-cbc -K $encrypted_fc3d5d829302_key -iv $encrypted_fc3d5d829302_iv -in pkg/blob/testdata/gcloud.json.enc -out pkg/blob/testdata/gcloud.json -d; fi
install: true
script:
- if [[ $TRAVIS_EVENT_TYPE = pull_request ]]; then make ci.$RUNTYPE.full; else make ci.$RUNTYPE.simple; fi
after_success:
- if [[ $RUNTYPE == go.test.amd64 && ! -z "$COVERALLS_TOKEN" ]]; then make go.coveralls; fi
- |
  if [[ $RUNTYPE == build-all && ! -z "$DOCKER_IMAGE" && ! -z "$DOCKER_USERNAME" && ! -z "$DOCKER_PASSWORD" ]]
  then
    make dev-deps deps docker
    if [[ $TRAVIS_EVENT_TYPE == "push" && "$TRAVIS_BRANCH" =~ master$ ]]
    then
      docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
      docker tag "$DOCKER_IMAGE" "$DOCKER_IMAGE:latest"
      docker push "$DOCKER_IMAGE:latest"
    fi
  fi
