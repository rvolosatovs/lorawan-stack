sudo: required

conditions: v1
if: type = pull_request OR branch =~ ^master$ OR tag IS present

language: go
go: '1.11.x'
go_import_path: go.thethings.network/lorawan-stack

env:
  global:
  - YARN_CACHE_FOLDER=$HOME/.cache/yarn
  - TEST_SLOWDOWN=8
  - TEST_REDIS=1
  - PATH=/snap/bin:$PATH
matrix:
  include:
  - env: RUNTYPE=js.test
    os: linux

  - env: RUNTYPE=go.test GOARCH=amd64
    os: linux

  - if: type = pull_request OR branch =~ ^master$
    env: RUNTYPE=go.test GOARCH=386
    os: linux

  - env: RUNTYPE=go.lint
    os: linux

  - if: type = pull_request OR branch =~ ^master$
    env: RUNTYPE=go.lint-extra
    os: linux

  - if: tag IS present
    env: RUNTYPE=release
    os: linux

  allow_failures:
    - env: RUNTYPE=go.lint-extra


services:
- docker
addons:
  apt:
    packages:
    - rpm
    - snapd

cache:
  directories:
  - $HOME/.cache/go-build
  - $HOME/.cache/yarn
  - $GOPATH/pkg/mod

before_install:
- |
  if [[ ! -z "$encrypted_fc3d5d829302_key" ]]; then
    openssl aes-256-cbc -K $encrypted_fc3d5d829302_key \
                        -iv $encrypted_fc3d5d829302_iv \
                        -in pkg/blob/testdata/gcloud.json.enc \
                        -out pkg/blob/testdata/gcloud.json \
                        -d
  fi
- |
  if [[ "$RUNTYPE" == "go.test" ]]; then
    sudo rm /usr/local/bin/docker-compose
    curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m) > docker-compose
    chmod +x docker-compose
    sudo mv docker-compose /usr/local/bin
  fi
- |
  if [[ "$RUNTYPE" == "release" ]]; then
    sudo snap install snapcraft --classic
  fi

install: true

script:
- |
  if [[ "$RUNTYPE" == "js.test" ]]; then
    make js.dev-deps js.deps sdk.deps
    make js.translations
    make js.test sdk.test
    make js.lint
  fi
- |
  if [[ "$RUNTYPE" == "go.test" ]]; then
    make go.deps
    make dev.databases.start
    make dev.certs
    make go.test
  fi
- |
  if [[ "$RUNTYPE" == "go.lint" ]]; then
    make go.deps
    make protos.clean protos
    make go.unconvert
    make go.fmt
    make go.misspell
    make headers.check
    make messages
  fi
- |
  if [[ "$RUNTYPE" == "go.lint-extra" ]]; then
    make go.lint-travis
  fi
- |
  if [[ "$RUNTYPE" == "release" ]]; then
    make deps
  fi
- make git.diff

after_success:
- if [[ "$RUNTYPE" == "go.test" ]] && [[ "$GOARCH" == "amd64" ]]; then make go.coveralls; fi
- if [[ "$RUNTYPE" == "release" ]]; then docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"; fi

deploy:
- provider: script
  skip_cleanup: true
  script: GO111MODULE=on go run github.com/goreleaser/goreleaser
  on:
    tags: true
    condition: $RUNTYPE = "release"
