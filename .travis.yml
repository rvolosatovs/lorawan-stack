sudo: required
conditions: v1
if: type = pull_request OR branch =~ ^master$ OR tag IS present
language: go
go: 1.12.x
go_import_path: go.thethings.network/lorawan-stack
env:
  global:
  - YARN_CACHE_FOLDER=$HOME/.cache/yarn
  - TEST_SLOWDOWN=8
  - TEST_REDIS=1
  - PATH=/snap/bin:$PATH
matrix:
  include:
  - env: RUNTYPE=js.test
    os: linux
  - env: RUNTYPE=go.test GOARCH=amd64
    os: linux
  - if: type = pull_request OR branch =~ ^master$
    env: RUNTYPE=go.test GOARCH=386
    os: linux
  - env: RUNTYPE=go.lint
    os: linux
  - if: tag IS present
    env: RUNTYPE=release
    os: linux
services:
- docker
addons:
  apt:
    packages:
    - rpm
    - snapd
cache:
  directories:
  - "$HOME/.cache/go-build"
  - "$HOME/.cache/yarn"
  - "$GOPATH/pkg/mod"
before_install:
- |
  if [[ ! -z "$encrypted_fc3d5d829302_key" ]]; then
    openssl aes-256-cbc -K $encrypted_fc3d5d829302_key \
                        -iv $encrypted_fc3d5d829302_iv \
                        -in pkg/blob/testdata/gcloud.json.enc \
                        -out pkg/blob/testdata/gcloud.json \
                        -d
  fi
- |
  if [[ "$RUNTYPE" == "go.test" ]]; then
    sudo rm /usr/local/bin/docker-compose
    curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m) > docker-compose
    chmod +x docker-compose
    sudo mv docker-compose /usr/local/bin
  fi
- |
  if [[ "$RUNTYPE" == "release" ]]; then
    openssl aes-256-cbc -K $encrypted_82ec1379e985_key -iv $encrypted_82ec1379e985_iv -in snapcraft.login.enc -out snapcraft.login -d
  fi
install:
- |
  if [[ "$RUNTYPE" == "release" ]]; then
    sudo snap install snapcraft --classic
  fi

script:
# JS Tests
- if [[ "$RUNTYPE" == "js.test" ]]; then make js.dev-deps js.deps sdk.deps; fi
- if [[ "$RUNTYPE" == "js.test" ]]; then make js.translations; fi
- if [[ "$RUNTYPE" == "js.test" ]]; then make js.test sdk.test; fi
- if [[ "$RUNTYPE" == "js.test" ]]; then make js.lint; fi
- if [[ "$RUNTYPE" == "js.test" ]]; then make sdk.js.build sdk.protos.clean sdk.protos; fi
- if [[ "$RUNTYPE" == "js.test" ]]; then make swagger.protos.clean swagger.protos; fi
- if [[ "$RUNTYPE" == "js.test" ]]; then make markdown.protos.clean markdown.protos; fi
# Go Tests
- if [[ "$RUNTYPE" == "go.test" ]]; then make go.deps; fi
- if [[ "$RUNTYPE" == "go.test" ]]; then make dev.databases.start; fi
- if [[ "$RUNTYPE" == "go.test" ]]; then make dev.certs; fi
- if [[ "$RUNTYPE" == "go.test" ]]; then make go.test; fi
- if [[ "$RUNTYPE" == "go.test" ]]; then go run ./cmd/ttn-lw-stack version; fi
- if [[ "$RUNTYPE" == "go.test" ]]; then go run ./cmd/ttn-lw-cli version; fi
# Go Quality
- if [[ "$RUNTYPE" == "go.lint" ]]; then make go.deps; fi
- if [[ "$RUNTYPE" == "go.lint" ]]; then make headers.check; fi
- if [[ "$RUNTYPE" == "go.lint" ]]; then make messages; fi
- if [[ "$RUNTYPE" == "go.lint" ]]; then make go.lint; fi
- if [[ "$RUNTYPE" == "go.lint" ]]; then make go.protos.clean go.protos; fi
- if [[ "$RUNTYPE" == "go.lint" ]]; then make go.unconvert; fi
- if [[ "$RUNTYPE" == "go.lint" ]]; then make go.fmt; fi
- if [[ "$RUNTYPE" == "go.lint" ]]; then make go.misspell; fi
# Release
- if [[ "$RUNTYPE" == "release" ]]; then make deps; fi
# Diff
- make git.diff
after_success:
- |
  if [[ "$RUNTYPE" == "go.test" ]] && [[ "$GOARCH" == "amd64" ]]; then
    make go.coveralls
  fi
- |
  if [[ "$RUNTYPE" == "release" ]]; then
    docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
    snapcraft login --with snapcraft.login
  fi
deploy:
- provider: script
  skip_cleanup: true
  script: GO111MODULE=on go run github.com/goreleaser/goreleaser --release-notes <(go run github.com/TheThingsIndustries/release-notes -owner TheThingsNetwork -repo lorawan-stack -id "release-notes" -head $(git rev-parse HEAD))
  on:
    tags: true
    condition: $RUNTYPE = "release"
