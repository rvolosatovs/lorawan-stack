name: Snapshot release

on:
  push:
    branches:
      - 'v3.*'

env:
  NODE_ENV: production

jobs:
  release:
    name: Snapshot release
    runs-on: ubuntu-18.04
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: true
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: '${{ secrets.DOCKERHUB_USERNAME }}'
        password: '${{ secrets.DOCKERHUB_PASSWORD }}'
    - name: Set up Node
      uses: actions/setup-node@v2-beta
      with:
        node-version: '~14'
    - name: Get Yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(npx yarn cache dir)"
    - name: Initialize Yarn module cache
      id: yarn-cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '~1.16'
    - name: Initialize Go module cache
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Download Go dependencies
      run: go mod download
    - name: Download Go tool dependencies
      run: |
        cd tools
        go mod download
    - name: Initialize tool binary cache
      uses: actions/cache@v2
      with:
        path: tools/bin
        key: ${{ runner.os }}-tools-${{ hashFiles('tools/**') }}
    - name: Make Mage
      run: make tools/bin/mage
    - name: Install JS SDK dependencies
      run: tools/bin/mage jsSDK:deps
    - name: Build JS SDK
      run: tools/bin/mage jsSDK:clean jsSDK:build
    - name: Install JS dependencies
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: tools/bin/mage js:deps
      timeout-minutes: 5
    - name: Build frontend
      run: tools/bin/mage js:clean js:build
    - name: Check for diff
      run: tools/bin/mage git:diff
    - name: Run Goreleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        version: 'v0.161.1'
        args: release --config .goreleaser.snapshot.yml --snapshot
    - name: Tag and Push Docker images
      run: |
        docker tag lorawan-stack-dev:${{ github.sha }}-amd64 thethingsnetwork/lorawan-stack-dev:${{ github.sha }}-amd64
        docker push thethingsnetwork/lorawan-stack-dev:${{ github.sha }}-amd64
        docker tag lorawan-stack-dev:${{ github.sha }}-arm64 thethingsnetwork/lorawan-stack-dev:${{ github.sha }}-arm64
        docker push thethingsnetwork/lorawan-stack-dev:${{ github.sha }}-arm64
        docker manifest create thethingsnetwork/lorawan-stack-dev:${{ github.sha }} thethingsnetwork/lorawan-stack-dev:${{ github.sha }}-amd64 thethingsnetwork/lorawan-stack-dev:${{ github.sha }}-arm64
        docker manifest push thethingsnetwork/lorawan-stack-dev:${{ github.sha }}
      env:
        DOCKER_CLI_EXPERIMENTAL: enabled
