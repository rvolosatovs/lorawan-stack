// Copyright Â© 2018 The Things Network Foundation, The Things Industries B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "go.thethings.network/lorawan-stack/api/end_device.proto";
import "go.thethings.network/lorawan-stack/api/identifiers.proto";
import "go.thethings.network/lorawan-stack/api/keys.proto";
import "go.thethings.network/lorawan-stack/api/lorawan.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/duration.proto";

package ttn.lorawan.v3;

option go_package = "go.thethings.network/lorawan-stack/pkg/ttnpb";

// Join Request
message JoinRequest {
  option (gogoproto.populate) = false;

  // Raw uplink bytes (PHYPayload)
  bytes raw_payload = 1;

  // LoRaWAN Payload
  Message payload = 2 [(gogoproto.nullable) = false];

  // End device identifiers
  // - this includes the DevAddr assigned by the network server
  EndDeviceIdentifiers end_device = 3 [(gogoproto.embed) = true, (gogoproto.nullable) = false];

  // MAC version selected by the network server
  MACVersion selected_mac_version = 4;

  // NetID of the accepting network server
  bytes net_id = 5 [(gogoproto.nullable) = false, (gogoproto.customname) = "NetID", (gogoproto.customtype) = "go.thethings.network/lorawan-stack/pkg/types.NetID"];

  // Downlink Settings
  DLSettings downlink_settings = 6 [(gogoproto.nullable) = false];

  // Rx Delay in seconds
  uint32 rx_delay = 7;

  // Optional CFList
  CFList cf_list = 8 [(gogoproto.customname) = "CFList"];

  reserved 9; // Reserved for CFListType
}

// Answer to the Join Request
message JoinResponse {
  // Raw uplink bytes (PHYPayload)
  bytes raw_payload = 1;

  // The session keys
  SessionKeys session_keys = 2 [(gogoproto.embed) = true, (gogoproto.nullable) = false];

  // Lifetime of the session
  google.protobuf.Duration lifetime = 3;
}
