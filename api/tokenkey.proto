// Copyright Â© 2018 The Things Network Foundation, distributed under the MIT license (see LICENSE file)

syntax = "proto3";

package ttn.v3;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/TheThingsNetwork/ttn/api/auth.proto";
import "github.com/TheThingsNetwork/ttn/api/identifiers.proto";
import "github.com/TheThingsNetwork/ttn/api/rights.proto";

option go_package = "github.com/TheThingsNetwork/ttn/pkg/ttnpb";

message GetTokenInfoRequest {
  // access_token is the access token to be instrospected.
  string access_token = 1;
}

message GetTokenInfoResponse {
  // access_token is the requested access token.
  string access_token = 1;

  // token_type is the access token type.
  string token_type = 2;

  // client_id is the client's ID related to the access token.
  ClientIdentifier client_id = 3 [(gogoproto.customname) = "ClientID"];

  // scope is the list of rights that the user has granted to the client.
  string scope = 4;

  // expires_in is the TTL of the token in seconds.
  int32 expires_in = 5;

  // user_id is the ID of the user who granted access to the third-party client.
  UserIdentifier user_id = 6 [(gogoproto.customname) = "UserID"];
}

message GetKeyInfoRequest {
  // key is the value of the key itself.
  string key = 1;
}

message GetKeyInfoResponse {
  // entity_id is the entity's ID the API key is for.
  string entity_id = 1 [(gogoproto.customname) = "EntityID"];

  // key is the API key.
  APIKey key = 2;
}

// IsTokenKeyInfo is the interface that provides methods to the Resource Servers
// in order to introspect and validate access tokens and API keys.
service IsTokenKeyInfo {
  // GetTokenInfo returns an access token information.
  // It returns error if token is expired.
  rpc GetTokenInfo(GetTokenInfoRequest) returns (GetTokenInfoResponse);

  // GetKeyInfo returns an API key information.
  rpc GetKeyInfo(GetKeyInfoRequest) returns (GetKeyInfoResponse);
}
