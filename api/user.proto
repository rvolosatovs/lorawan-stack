// Copyright Â© 2018 The Things Network Foundation, The Things Industries B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "lorawan-stack/api/client.proto";
import "lorawan-stack/api/contact_info.proto";
import "lorawan-stack/api/enums.proto";
import "lorawan-stack/api/identifiers.proto";
import "lorawan-stack/api/rights.proto";

package ttn.lorawan.v3;

option go_package = "go.thethings.network/lorawan-stack/pkg/ttnpb";

// User is the message that defines an user on the network.
message User {
  UserIdentifiers ids = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];

  string name = 4;
  string description = 5;
  map<string,string> attributes = 6;
  repeated ContactInfo contact_info = 7;

  // Primary email address that can be used for logging in.
  // This address is not public, use contact_info for that.
  string primary_email_address = 8;

  // Only used on create; never returned.
  string password = 9;
  google.protobuf.Timestamp password_updated_at = 10 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  bool require_password_update = 11;

  // The reviewing state of the user.
  // This field can only be modified by admins.
  State state = 12;
  // This user is an admin.
  // This field can only be modified by other admins.
  bool admin = 13;
}

message Users {
  repeated User users = 1;
}

message GetUserRequest {
  UserIdentifiers user_ids = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
  google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message CreateUserRequest {
  User user = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
}

message UpdateUserRequest {
  User user = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
  google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateUserPasswordRequest {
  UserIdentifiers user_ids = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
  string new = 2;
  string old = 3;
}

message SetUserAPIKeyRequest {
  UserIdentifiers user_ids = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
  string id = 2 [(gogoproto.customname) = "ID"];
  repeated Right rights = 3;
}

message RemoveUserAPIKeyRequest {
  UserIdentifiers user_ids = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
  string id = 2 [(gogoproto.customname) = "ID"];
}

message Invitation {
  string email = 1;
  string token = 2;

  google.protobuf.Timestamp expires_at = 3 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  google.protobuf.Timestamp created_at = 4 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  google.protobuf.Timestamp updated_at = 5 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
}

message Invitations {
  repeated Invitation invitations = 1;
}

message SendInvitationRequest {
  string email = 1;
}

message DeleteInvitationRequest {
  string email = 1;
}
