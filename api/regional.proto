// Copyright Â© 2018 The Things Network Foundation, The Things Industries B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/duration.proto";

package ttn.lorawan.v3;

option go_package = "go.thethings.network/lorawan-stack/pkg/ttnpb";

message ConcentratorConfig {
  message Channel {
    uint64 frequency = 1;
    uint32 radio = 2;
  }
  repeated Channel channels = 1;

  message LoRaStandardChannel {
    Channel channel = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
    // Bandwidth in Hz.
    uint32 bandwidth = 2;
    uint32 spreading_factor = 3;
  }
  LoRaStandardChannel lora_standard_channel = 2 [(gogoproto.customname) = "LoRaStandardChannel"];
  message FSKChannel {
    Channel channel = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
    // Bandwidth in Hz.
    uint32 bandwidth = 2;
    uint32 bit_rate = 3;
  }
  FSKChannel fsk_channel = 3 [(gogoproto.customname) = "FSKChannel"];

  message LBTConfiguration {
    float rssi_target = 1 [(gogoproto.customname) = "RSSITarget"];
    // RSSIOffset describes the LBT config-specific RSSI offset.
    float rssi_offset = 2 [(gogoproto.customname) = "RSSIOffset"];
    int32 scan_time = 3;
  }
  LBTConfiguration lbt = 4 [(gogoproto.customname) = "LBT"];

  Channel ping_slot = 5;

  message Radio {
    bool enable = 1;
    string chip_type = 2;
    uint64 frequency = 3;
    float rssi_offset = 4 [(gogoproto.customname) = "RSSIOffset"];

    message TxConfiguration {
      uint64 min_frequency = 1;
      uint64 max_frequency = 2;
      uint64 notch_frequency = 3;
    }
    TxConfiguration tx_configuration = 5;
  }
  repeated Radio radios = 6;
}
