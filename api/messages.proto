// Copyright Â© 2018 The Things Network Foundation, The Things Industries B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "go.thethings.network/lorawan-stack/api/identifiers.proto";
import "go.thethings.network/lorawan-stack/api/keys.proto";
import "go.thethings.network/lorawan-stack/api/lorawan.proto";
import "go.thethings.network/lorawan-stack/api/metadata.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

package ttn.lorawan.v3;

option go_package = "go.thethings.network/lorawan-stack/pkg/ttnpb";

// Uplink message from the end device to the network
message UplinkMessage {
  option (gogoproto.populate) = false;

  // Mapping from UDP message (other fields can be set in "advanced"):
  //
  // - time: rx_metadata.time
  // - tmst: rx_metadata.timestamp
  // - freq: settings.frequency
  // - modu: settings.modulation
  // - datr: settings.data_rate_index (and derived fields)
  // - codr: settings.coding_rate
  // - size: len(raw_payload)
  // - data: raw_payload (and derived payload)
  // - rsig: rx_metadata
  //  - ant: rx_metadata.antenna_index
  //  - chan: rx_metadata.channel_index
  //  - rssis: rx_metadata.rssi
  //  - lsnr: rx_metadata.snr

  // Mapping from BACKEND message:
  //
  // - PHYPayload: raw_payload
  // - FRMPayload: payload.mac_payload.frm_payload
  // - DevEUI: end_device.dev_eui
  // - DevAddr: end_device.dev_addr
  // - ULMetadata:
  //  - DevEUI: end_device.dev_eui
  //  - DevAddr: end_device.dev_addr
  //  - FPort: payload.mac_payload.f_port
  //  - FCntUp: payload.mac_payload.f_hdr.f_cnt
  //  - Confirmed: payload.mhdr.m_type
  //  - DataRate: settings.data_rate_index (and derived fields)
  //  - ULFreq: settings.frequency
  //  - RecvTime: included in each rx_metadata
  //  - GWCnt: derived from rx_metadata contents
  //  - GWInfo:
  //   - ID: rx_metadata.gateway_id
  //   - RSSI: rx_metadata.rssi
  //   - SNR: rx_metadata.snr
  //   - Lat: rx_metadata.location.latitude
  //   - Lon: rx_metadata.location.longitude

  // Raw uplink bytes (PHYPayload)
  bytes raw_payload = 1;

  // LoRaWAN Payload
  Message payload = 2 [(gogoproto.nullable) = false];

  // End device identifiers
  EndDeviceIdentifiers end_device = 3 [(gogoproto.embed) = true, (gogoproto.nullable) = false];

  // LoRaWAN Tx settings used for this transmission
  TxSettings settings = 4 [(gogoproto.nullable) = false];

  // Rx metadata from the gateway, one for each antenna that received the message
  repeated RxMetadata rx_metadata = 5;

  // Locations from various sources
  map<string, LocationSource> locations = 6;

  // ReceivedAt represents the time instant when the Gateway Server received the message.
  google.protobuf.Timestamp received_at = 7 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];

  repeated string correlation_ids = 8 [(gogoproto.customname) = "CorrelationIDs"];
}

// Downlink message from the network to the end device
message DownlinkMessage {
  option (gogoproto.populate) = false;

  // Mapping from UDP message:
  //
  // imme: -
  // tmst: tx_metadata.timestamp
  // time: tx_metadata.time
  // freq: settings.frequency
  // rfch: (0)
  // powe: settings.tx_power
  // modu: settings.modulation
  // datr: settings.data_rate_index (derived)
  // codr: settings.coding_rate
  // fdev: (derived from bandwidth)
  // ipol: settings.polarization_inversion
  // prea: [settings.advanced]
  // size: (derived from len(raw_payload))
  // data: raw_payload
  // ncrc: [settings.advanced]

  // Mapping from BACKEND message:
  //
  // - PHYPayload: raw_payload
  // - FRMPayload: payload.mac_payload.frm_payload
  // - DevEUI: end_device.dev_eui
  // - DevAddr: end_device.dev_addr
  // - DLMetadata:
  //  - DevEUI: end_device.dev_eui
  //  - DevAddr: end_device.dev_addr
  //  - FPort: payload.mac_payload.f_port
  //  - FCntDown: payload.mac_payload.f_hdr.f_cnt
  //  - Confirmed: payload.mhdr.m_type
  //  - RxDelay1:                                                           | TODO: Rx1/2 selection
  //  - DataRate1/DataRate2: settings.data_rate_index (and derived fields)  |
  //  - DLFreq1/DLFreq2: settings.frequency                                 |
  //  - GWInfo:
  //   - ID: tx_metadata.gateway_id

  // Raw downlink bytes (PHYPayload)
  bytes raw_payload = 1;

  // LoRaWAN Payload
  Message payload = 2 [(gogoproto.nullable) = false];

  // End device identifiers
  EndDeviceIdentifiers end_device = 3 [(gogoproto.embed) = true, (gogoproto.nullable) = false];

  // LoRaWAN Tx settings used for this transmission
  TxSettings settings = 4 [(gogoproto.nullable) = false];

  // Tx metadata for the gateway
  TxMetadata tx_metadata = 5 [(gogoproto.nullable) = false];

  repeated string correlation_ids = 6 [(gogoproto.customname) = "CorrelationIDs"];
}

message ApplicationUplink {
  uint32 f_port = 1;
  uint32 f_cnt = 2;
  bytes frm_payload = 3 [(gogoproto.customname) = "FRMPayload"];
  repeated RxMetadata rx_metadata = 4;
  repeated string correlation_ids = 5 [(gogoproto.customname) = "CorrelationIDs"];
}

message ApplicationJoinAccept {
  // The (encrypted) Application Session Key.
  KeyEnvelope app_s_key = 1;
  repeated string correlation_ids = 2 [(gogoproto.customname) = "CorrelationIDs"];
}

message ApplicationDownlink {
  option (gogoproto.populate) = false;

  uint32 f_port = 1;
  uint32 f_cnt = 2;
  bytes frm_payload = 3 [(gogoproto.customname) = "FRMPayload"];
  bool confirmed = 4;
  repeated string correlation_ids = 5 [(gogoproto.customname) = "CorrelationIDs"];
}
