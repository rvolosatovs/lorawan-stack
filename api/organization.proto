// Copyright Â© 2018 The Things Network Foundation, The Things Industries B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "lorawan-stack/api/contact_info.proto";
import "lorawan-stack/api/identifiers.proto";
import "lorawan-stack/api/rights.proto";

package ttn.lorawan.v3;

option go_package = "go.thethings.network/lorawan-stack/pkg/ttnpb";

message Organization {
  OrganizationIdentifiers ids = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
  google.protobuf.Timestamp created_at = 2 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  google.protobuf.Timestamp updated_at = 3 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];

  string name = 4;
  string description = 5;
  map<string,string> attributes = 6;
  repeated ContactInfo contact_info = 7;
}

message Organizations {
  repeated Organization organizations = 1;
}

message GetOrganizationRequest {
  OrganizationIdentifiers organization_ids = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
  google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message ListOrganizationsRequest {
  // By default we list all organizations the caller has rights on.
  // Set the user to instead list the organizations
  // where the user or organization is collaborator on.

  // NOTE: It is currently not possible to have organizations collaborating on
  // other organizations.
  OrganizationOrUserIdentifiers collaborator = 1;
  google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message CreateOrganizationRequest {
  Organization organization = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
  // Collaborator to grant all rights on the newly created application.
  // NOTE: It is currently not possible to have organizations collaborating on
  // other organizations.
  OrganizationOrUserIdentifiers collaborator = 2 [(gogoproto.nullable) = false];
}

message UpdateOrganizationRequest {
  Organization organization = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
  google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message CreateOrganizationAPIKeyRequest {
  OrganizationIdentifiers organization_ids = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
  string name = 2;
  repeated Right rights = 3;
}

message UpdateOrganizationAPIKeyRequest {
  OrganizationIdentifiers organization_ids = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
  APIKey api_key = 2 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
}

message SetOrganizationCollaboratorRequest {
  OrganizationIdentifiers organization_ids = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
  Collaborator collaborator = 2 [(gogoproto.nullable) = false];
}
