// Copyright Â© 2018 The Things Network Foundation, The Things Industries B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "github.com/TheThingsNetwork/ttn/api/auth.proto";
import "github.com/TheThingsNetwork/ttn/api/identifiers.proto";
import "github.com/TheThingsNetwork/ttn/api/rights.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

package ttn.v3;

option go_package = "github.com/TheThingsNetwork/ttn/pkg/ttnpb";

message Organization {
  // Identifiers of the organization.
  OrganizationIdentifiers ids = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];

  // name is the organization's name.
  string name = 2;

  // description is an organization's description.
  string description = 3;

  // url is the URL of the organization website.
  string url = 4 [(gogoproto.customname) = "URL"];

  // location is the organization's location, e.g. "Amsterdam, Europe".
  string location = 5;

  // email is a generic contact email address that is shown as contact email.
  string email = 6;

  // created_at denotes when the user was created.
  // This is a read-only field.
  google.protobuf.Timestamp created_at = 7 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];

  // updated_at is the last time the user was updated.
  // This is a read-only field.
  google.protobuf.Timestamp updated_at = 8 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
}

message OrganizationMember {
  // organization_ids are the organization's identifiers.
  OrganizationIdentifiers organization_ids = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];

  // user_ids are the user's identifiers.
  UserIdentifiers user_ids = 2 [(gogoproto.embed) = true, (gogoproto.nullable) = false];

  // rights is the list of rights the user bears to the organization.
  repeated Right rights = 3;
}
