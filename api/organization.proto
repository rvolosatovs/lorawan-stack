// Copyright Â© 2018 The Things Network Foundation, distributed under the MIT license (see LICENSE file)

syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/TheThingsNetwork/ttn/api/auth.proto";
import "github.com/TheThingsNetwork/ttn/api/identifiers.proto";
import "github.com/TheThingsNetwork/ttn/api/rights.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

package ttn.v3;

option go_package = "github.com/TheThingsNetwork/ttn/pkg/ttnpb";

message Organization {
  // id is the unique and immutable Organization's ID.
  // This ID shares namespace with the users' IDs.
  OrganizationIdentifier id = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];

  // name is the organization's name.
  string name = 2;

  // description is an organization's description.
  string description = 3;

  // url is the URL of the organization website.
  string url = 4 [(gogoproto.customname) = "URL"];

  // location is the organization's location, e.g. "Amsterdam, Europe".
  string location = 5;

  // email is a generic contact email address that is shown as contact email.
  string email = 6;

  // created_at denotes when the user was created.
  // This is a read-only field.
  google.protobuf.Timestamp created_at = 7 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];

  // updated_at is the last time the user was updated.
  // This is a read-only field.
  google.protobuf.Timestamp updated_at = 8 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
}

message OrganizationMember {
  // organization_id is the organization's ID.
  OrganizationIdentifier organization_id = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];

  // user_id is the user's ID.
  UserIdentifier user_id = 2 [(gogoproto.embed) = true, (gogoproto.nullable) = false];

  // rights is the list of rights the user bears to the organization.
  repeated Right rights = 3;
}
