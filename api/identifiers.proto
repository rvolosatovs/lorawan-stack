// Copyright Â© 2017 The Things Network Foundation, distributed under the MIT license (see LICENSE file)

syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

package ttn.v3;

option go_package = "github.com/TheThingsNetwork/ttn/pkg/ttnpb";

// UserIdentifiers is the message that is used to identify an user by ID or by email.
message UserIdentifiers {
  oneof Identifiers {
    UserIDIdentifiers id = 1 [(gogoproto.customname) = "ID"];
    UserEmailIdentifiers email = 2;
  }
}

// UserIDIdentifiers is the message that is used to identify an user by ID.
message UserIDIdentifiers {
  // TTN Tenant ID (in case of multi-tenant network stack).
  string tenant_id = 1 [(gogoproto.customname) = "TenantID"];
  // user_id is the ID of the user.
  string user_id = 2 [(gogoproto.customname) = "UserID"];
}

// UserEmailIdentifiers is the message used to identify an user by email.
message UserEmailIdentifiers {
  // TTN Tenant ID (in case of multi-tenant network stack).
  string tenant_id = 1 [(gogoproto.customname) = "TenantID"];
  // email address of the user.
  string email = 2;
}

// ApplicationIdentifiers is the message that is used to identify an application.
message ApplicationIdentifiers {
  // TTN Tenant ID (in case of multi-tenant network stack).
  string tenant_id = 1 [(gogoproto.customname) = "TenantID"];
  // TTN Application ID.
  string application_id = 2 [(gogoproto.customname) = "ApplicationID"];
}

// ApplicationAPIKeyIdentifiers is the message that is used to identity an
// application API key.
message ApplicationAPIKeyIdentifiers {
  ApplicationIdentifiers application = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
  // key_name is the application API key name.
  string key_name = 2;
}

// ApplicationCollaboratorIdentifiers is the message that is used to identify
// a collaborator within an application.
message ApplicationCollaboratorIdentifiers {
  ApplicationIdentifiers application = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
  // user_id is the ID of the user.
  string user_id = 2 [(gogoproto.customname) = "UserID"];
}

// GatewayIdentifiers is the message that is used to identify a gateway.
message GatewayIdentifiers {
  // TTN Gateway ID.
  string gateway_id = 1 [(gogoproto.customname) = "GatewayID"];
  // TTN Tenant ID (in case of multi-tenant network stack).
  string tenant_id = 2 [(gogoproto.customname) = "TenantID"];
}

// GatewayCollaboratorIdentifiers is the message that is used to identify a
// collaborator within a gateway.
message GatewayCollaboratorIdentifiers {
  GatewayIdentifiers gateway = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
  // user_id is the ID of the user.
  string user_id = 2 [(gogoproto.customname) = "UserID"];
}

// EndDeviceIdentifiers message is carried with uplink and downlink messages.
// Unknown fields are left empty.
message EndDeviceIdentifiers {
  // TTN Device ID.
  string device_id = 1 [(gogoproto.customname) = "DeviceID"];
  // TTN Application ID.
  string application_id = 2 [(gogoproto.customname) = "ApplicationID"];
  // TTN Tenant ID (in case of multi-tenant network server).
  string tenant_id = 3 [(gogoproto.customname) = "TenantID"];

  // LoRaWAN DevEUI.
  bytes dev_eui = 4 [(gogoproto.customtype) = "github.com/TheThingsNetwork/ttn/pkg/types.EUI64", (gogoproto.customname) = "DevEUI"];
  // LoRaWAN JoinEUI (or AppEUI for LoRaWAN 1.0 end devices).
  bytes join_eui = 5 [(gogoproto.customtype) = "github.com/TheThingsNetwork/ttn/pkg/types.EUI64", (gogoproto.customname) = "JoinEUI"];
  // LoRaWAN DevAddr.
  bytes dev_addr = 6 [(gogoproto.customtype) = "github.com/TheThingsNetwork/ttn/pkg/types.DevAddr"];
}

// ClientIdentifiers is the message that is used to identify a client.
message ClientIdentifiers {
  // TTN Client ID.
  string client_id = 1 [(gogoproto.customname) = "ClientID"];
  // TTN Tenant ID (in case of multi-tenant network stack).
  string tenant_id = 2 [(gogoproto.customname) = "TenantID"];
}

// ClientCollaboratorIdentifiers is the message used to identify a collaborator
// within a client.
message ClientCollaboratorIdentifiers {
  ClientIdentifiers client = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
  // user_id is the ID of the user.
  string user_id = 2 [(gogoproto.customname) = "UserID"];
}
