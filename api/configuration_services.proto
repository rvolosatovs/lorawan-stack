// Copyright Â© 2019 The Things Network Foundation, The Things Industries B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/api/annotations.proto";

package ttn.lorawan.v3;

option go_package = "go.thethings.network/lorawan-stack/pkg/ttnpb";

message ListFrequencyPlansRequest {
  // Optional base frequency in MHz for hardware support (433, 470, 868 or 915)
  uint32 base_frequency = 1;
}

message FrequencyPlanDescription {
  string id = 1 [(gogoproto.customname) = "ID"];
  // The ID of the frequency that the current frequency plan is based on.
  string base_id = 2 [(gogoproto.customname) = "BaseID"];
  string name = 3;
  // Base frequency in MHz for hardware support (433, 470, 868 or 915)
  uint32 base_frequency = 4;
}

message ListFrequencyPlansResponse {
  repeated FrequencyPlanDescription frequency_plans = 1;
}

service Configuration {
  rpc ListFrequencyPlans(ListFrequencyPlansRequest) returns (ListFrequencyPlansResponse) {
    option (google.api.http) = {
      get: "/configuration/frequency-plans"
    };
  }
}
