// Copyright Â© 2017 The Things Network Foundation, distributed under the MIT license (see LICENSE file)

syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/TheThingsNetwork/ttn/api/identifiers.proto";
import "google/protobuf/timestamp.proto";

package ttn.v3;

option go_package = "github.com/TheThingsNetwork/ttn/pkg/ttnpb";

// Client is the message that defines a third-party client on the network.
message Client {
  ClientIdentifiers client = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];

  // description is the description of the client.
  string description = 2;

  // secret is the secret used to prove the client identity.
  string secret = 3;

  // callback_uri is the callback URI of the client.
  string callback_uri = 4 [(gogoproto.customname) = "CallbackURI", (gogoproto.moretags) = "db:\"callback_uri\""];

  // state denotes the reviewing state of the client by the tenant admin.
  ClientState state = 5;

  // official denotes if the client is an official client created by the tenant admin.
  bool official = 6;

  // grants denotes which OAuth2 flows can the client use to get a token.
  repeated ClientGrant grants = 7;

  // scope denotes what scopes the client will have access to.
  repeated ClientScope scope = 8;

  // created_at denotes when the client was created.
  google.protobuf.Timestamp created_at = 9 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];

  // archived_at denotes when the client was disabled.
  google.protobuf.Timestamp archived_at = 10 [(gogoproto.stdtime) = true];
}

// ClientState enum defines all the possible tenant admin reviewing states
// that a third-party client request can be at.
enum ClientState {
  option (gogoproto.goproto_enum_prefix) = false;

  // State that denotes that the client request is pending to review by the
  // tenant admin.
  STATE_PENDING = 0;

  // Denotes that the client request has been approved by the tenant admin
  // and therefore the client can be used.
  STATE_APPROVED = 1;

  // Denotes that the client request has beenr rejected by the tenant admin
  // and therefore it cannot be used.
  STATE_REJECTED = 2;
}

// Scope enum defines the different scopes a third-party client can have access to.
enum ClientScope {
  option (gogoproto.goproto_enum_prefix) = false;

  // Denotes whether if the client has access to manage user's applications.
  SCOPE_APPLICATION = 0;

  // Denotes wheter if the client has r-w access to user's profile.
  SCOPE_PROFILE = 1;
}

// Grant enum defines the OAuth2 flows a third-party client can use to get
// access to a token.
enum ClientGrant {
  option (gogoproto.goproto_enum_prefix) = false;

  // Grant type used to exchange an authorization code for an access token.
  GRANT_AUTHORIZATION_CODE = 0;

  // Grant type used to exchange an username and password for an access token.
  GRANT_PASSWORD = 1;

  // Grant type used to exchange a refresh token for an access token.
  GRANT_REFRESH_TOKEN = 2;
}
