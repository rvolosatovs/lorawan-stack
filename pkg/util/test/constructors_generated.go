// Code generated by generate_constructors.go. DO NOT EDIT.

package test

import (
	"time"

	pbtypes "github.com/gogo/protobuf/types"
	"go.thethings.network/lorawan-stack/v3/pkg/ttnpb"
	"go.thethings.network/lorawan-stack/v3/pkg/types"
)

type (
	// RootKeysOption transforms ttnpb.RootKeys and returns it.
	// Implemetations must be pure functions with no side-effects.
	RootKeysOption func(ttnpb.RootKeys) ttnpb.RootKeys

	// rootKeysOptions represents the namespace, on which various RootKeysOption are defined.
	rootKeysOptions struct{}
)

// WithRootKeyID returns a RootKeysOption, which returns a copy of ttnpb.RootKeys with RootKeyID set to v.
func (rootKeysOptions) WithRootKeyID(v string) RootKeysOption {
	return func(x ttnpb.RootKeys) ttnpb.RootKeys {
		x.RootKeyID = v
		return x
	}
}

// WithAppKey returns a RootKeysOption, which returns a copy of ttnpb.RootKeys with AppKey set to v.
func (rootKeysOptions) WithAppKey(v *ttnpb.KeyEnvelope) RootKeysOption {
	return func(x ttnpb.RootKeys) ttnpb.RootKeys {
		x.AppKey = v
		return x
	}
}

// WithNwkKey returns a RootKeysOption, which returns a copy of ttnpb.RootKeys with NwkKey set to v.
func (rootKeysOptions) WithNwkKey(v *ttnpb.KeyEnvelope) RootKeysOption {
	return func(x ttnpb.RootKeys) ttnpb.RootKeys {
		x.NwkKey = v
		return x
	}
}

// Compose returns a functional composition of opts as a singular RootKeysOption.
func (rootKeysOptions) Compose(opts ...RootKeysOption) RootKeysOption {
	return func(x ttnpb.RootKeys) ttnpb.RootKeys {
		for _, opt := range opts {
			x = opt(x)
		}
		return x
	}
}

// Compose returns a functional composition of f and opts as a singular RootKeysOption.
func (f RootKeysOption) Compose(opts ...RootKeysOption) RootKeysOption {
	return func(x ttnpb.RootKeys) ttnpb.RootKeys {
		x = f(x)
		for _, opt := range opts {
			x = opt(x)
		}
		return x
	}
}

// RootKeysOptions is namespace containing ttnpb.RootKeys options.
var RootKeysOptions rootKeysOptions

// MakeRootKeys constructs a new ttnpb.RootKeys.
func MakeRootKeys(opts ...RootKeysOption) *ttnpb.RootKeys {
	v := RootKeysOptions.Compose(opts...)(baseRootKeys)
	return &v
}

type (
	// SessionKeysOption transforms ttnpb.SessionKeys and returns it.
	// Implemetations must be pure functions with no side-effects.
	SessionKeysOption func(ttnpb.SessionKeys) ttnpb.SessionKeys

	// sessionKeysOptions represents the namespace, on which various SessionKeysOption are defined.
	sessionKeysOptions struct{}
)

// WithSessionKeyID returns a SessionKeysOption, which returns a copy of ttnpb.SessionKeys with SessionKeyID set to v.
func (sessionKeysOptions) WithSessionKeyID(v []byte) SessionKeysOption {
	return func(x ttnpb.SessionKeys) ttnpb.SessionKeys {
		x.SessionKeyID = v
		return x
	}
}

// WithFNwkSIntKey returns a SessionKeysOption, which returns a copy of ttnpb.SessionKeys with FNwkSIntKey set to v.
func (sessionKeysOptions) WithFNwkSIntKey(v *ttnpb.KeyEnvelope) SessionKeysOption {
	return func(x ttnpb.SessionKeys) ttnpb.SessionKeys {
		x.FNwkSIntKey = v
		return x
	}
}

// WithSNwkSIntKey returns a SessionKeysOption, which returns a copy of ttnpb.SessionKeys with SNwkSIntKey set to v.
func (sessionKeysOptions) WithSNwkSIntKey(v *ttnpb.KeyEnvelope) SessionKeysOption {
	return func(x ttnpb.SessionKeys) ttnpb.SessionKeys {
		x.SNwkSIntKey = v
		return x
	}
}

// WithNwkSEncKey returns a SessionKeysOption, which returns a copy of ttnpb.SessionKeys with NwkSEncKey set to v.
func (sessionKeysOptions) WithNwkSEncKey(v *ttnpb.KeyEnvelope) SessionKeysOption {
	return func(x ttnpb.SessionKeys) ttnpb.SessionKeys {
		x.NwkSEncKey = v
		return x
	}
}

// WithAppSKey returns a SessionKeysOption, which returns a copy of ttnpb.SessionKeys with AppSKey set to v.
func (sessionKeysOptions) WithAppSKey(v *ttnpb.KeyEnvelope) SessionKeysOption {
	return func(x ttnpb.SessionKeys) ttnpb.SessionKeys {
		x.AppSKey = v
		return x
	}
}

// Compose returns a functional composition of opts as a singular SessionKeysOption.
func (sessionKeysOptions) Compose(opts ...SessionKeysOption) SessionKeysOption {
	return func(x ttnpb.SessionKeys) ttnpb.SessionKeys {
		for _, opt := range opts {
			x = opt(x)
		}
		return x
	}
}

// Compose returns a functional composition of f and opts as a singular SessionKeysOption.
func (f SessionKeysOption) Compose(opts ...SessionKeysOption) SessionKeysOption {
	return func(x ttnpb.SessionKeys) ttnpb.SessionKeys {
		x = f(x)
		for _, opt := range opts {
			x = opt(x)
		}
		return x
	}
}

// SessionKeysOptions is namespace containing ttnpb.SessionKeys options.
var SessionKeysOptions sessionKeysOptions

// MakeSessionKeys constructs a new ttnpb.SessionKeys.
func MakeSessionKeys(opts ...SessionKeysOption) *ttnpb.SessionKeys {
	v := SessionKeysOptions.Compose(opts...)(baseSessionKeys)
	return &v
}

type (
	// SessionOption transforms ttnpb.Session and returns it.
	// Implemetations must be pure functions with no side-effects.
	SessionOption func(ttnpb.Session) ttnpb.Session

	// sessionOptions represents the namespace, on which various SessionOption are defined.
	sessionOptions struct{}
)

// WithDevAddr returns a SessionOption, which returns a copy of ttnpb.Session with DevAddr set to v.
func (sessionOptions) WithDevAddr(v types.DevAddr) SessionOption {
	return func(x ttnpb.Session) ttnpb.Session {
		x.DevAddr = v
		return x
	}
}

// WithSessionKeys returns a SessionOption, which returns a copy of ttnpb.Session with SessionKeys set to v.
func (sessionOptions) WithSessionKeys(v ttnpb.SessionKeys) SessionOption {
	return func(x ttnpb.Session) ttnpb.Session {
		x.SessionKeys = v
		return x
	}
}

// WithLastFCntUp returns a SessionOption, which returns a copy of ttnpb.Session with LastFCntUp set to v.
func (sessionOptions) WithLastFCntUp(v uint32) SessionOption {
	return func(x ttnpb.Session) ttnpb.Session {
		x.LastFCntUp = v
		return x
	}
}

// WithLastNFCntDown returns a SessionOption, which returns a copy of ttnpb.Session with LastNFCntDown set to v.
func (sessionOptions) WithLastNFCntDown(v uint32) SessionOption {
	return func(x ttnpb.Session) ttnpb.Session {
		x.LastNFCntDown = v
		return x
	}
}

// WithLastAFCntDown returns a SessionOption, which returns a copy of ttnpb.Session with LastAFCntDown set to v.
func (sessionOptions) WithLastAFCntDown(v uint32) SessionOption {
	return func(x ttnpb.Session) ttnpb.Session {
		x.LastAFCntDown = v
		return x
	}
}

// WithLastConfFCntDown returns a SessionOption, which returns a copy of ttnpb.Session with LastConfFCntDown set to v.
func (sessionOptions) WithLastConfFCntDown(v uint32) SessionOption {
	return func(x ttnpb.Session) ttnpb.Session {
		x.LastConfFCntDown = v
		return x
	}
}

// WithStartedAt returns a SessionOption, which returns a copy of ttnpb.Session with StartedAt set to v.
func (sessionOptions) WithStartedAt(v time.Time) SessionOption {
	return func(x ttnpb.Session) ttnpb.Session {
		x.StartedAt = v
		return x
	}
}

// WithQueuedApplicationDownlinks returns a SessionOption, which returns a copy of ttnpb.Session with QueuedApplicationDownlinks set to vs.
func (sessionOptions) WithQueuedApplicationDownlinks(vs ...*ttnpb.ApplicationDownlink) SessionOption {
	return func(x ttnpb.Session) ttnpb.Session {
		x.QueuedApplicationDownlinks = vs
		return x
	}
}

// Compose returns a functional composition of opts as a singular SessionOption.
func (sessionOptions) Compose(opts ...SessionOption) SessionOption {
	return func(x ttnpb.Session) ttnpb.Session {
		for _, opt := range opts {
			x = opt(x)
		}
		return x
	}
}

// Compose returns a functional composition of f and opts as a singular SessionOption.
func (f SessionOption) Compose(opts ...SessionOption) SessionOption {
	return func(x ttnpb.Session) ttnpb.Session {
		x = f(x)
		for _, opt := range opts {
			x = opt(x)
		}
		return x
	}
}

// SessionOptions is namespace containing ttnpb.Session options.
var SessionOptions sessionOptions

// MakeSession constructs a new ttnpb.Session.
func MakeSession(opts ...SessionOption) *ttnpb.Session {
	v := SessionOptions.Compose(opts...)(baseSession)
	return &v
}

type (
	// MACStateOption transforms ttnpb.MACState and returns it.
	// Implemetations must be pure functions with no side-effects.
	MACStateOption func(ttnpb.MACState) ttnpb.MACState

	// macStateOptions represents the namespace, on which various MACStateOption are defined.
	macStateOptions struct{}
)

// WithCurrentParameters returns a MACStateOption, which returns a copy of ttnpb.MACState with CurrentParameters set to v.
func (macStateOptions) WithCurrentParameters(v ttnpb.MACParameters) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.CurrentParameters = v
		return x
	}
}

// WithDesiredParameters returns a MACStateOption, which returns a copy of ttnpb.MACState with DesiredParameters set to v.
func (macStateOptions) WithDesiredParameters(v ttnpb.MACParameters) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.DesiredParameters = v
		return x
	}
}

// WithDeviceClass returns a MACStateOption, which returns a copy of ttnpb.MACState with DeviceClass set to v.
func (macStateOptions) WithDeviceClass(v ttnpb.Class) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.DeviceClass = v
		return x
	}
}

// WithLoRaWANVersion returns a MACStateOption, which returns a copy of ttnpb.MACState with LoRaWANVersion set to v.
func (macStateOptions) WithLoRaWANVersion(v ttnpb.MACVersion) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.LoRaWANVersion = v
		return x
	}
}

// WithLastConfirmedDownlinkAt returns a MACStateOption, which returns a copy of ttnpb.MACState with LastConfirmedDownlinkAt set to v.
func (macStateOptions) WithLastConfirmedDownlinkAt(v *time.Time) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.LastConfirmedDownlinkAt = v
		return x
	}
}

// WithLastDevStatusFCntUp returns a MACStateOption, which returns a copy of ttnpb.MACState with LastDevStatusFCntUp set to v.
func (macStateOptions) WithLastDevStatusFCntUp(v uint32) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.LastDevStatusFCntUp = v
		return x
	}
}

// WithPingSlotPeriodicity returns a MACStateOption, which returns a copy of ttnpb.MACState with PingSlotPeriodicity set to v.
func (macStateOptions) WithPingSlotPeriodicity(v *ttnpb.PingSlotPeriodValue) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.PingSlotPeriodicity = v
		return x
	}
}

// WithPendingApplicationDownlink returns a MACStateOption, which returns a copy of ttnpb.MACState with PendingApplicationDownlink set to v.
func (macStateOptions) WithPendingApplicationDownlink(v *ttnpb.ApplicationDownlink) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.PendingApplicationDownlink = v
		return x
	}
}

// WithQueuedResponses returns a MACStateOption, which returns a copy of ttnpb.MACState with QueuedResponses set to vs.
func (macStateOptions) WithQueuedResponses(vs ...*ttnpb.MACCommand) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.QueuedResponses = vs
		return x
	}
}

// WithPendingRequests returns a MACStateOption, which returns a copy of ttnpb.MACState with PendingRequests set to vs.
func (macStateOptions) WithPendingRequests(vs ...*ttnpb.MACCommand) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.PendingRequests = vs
		return x
	}
}

// WithQueuedJoinAccept returns a MACStateOption, which returns a copy of ttnpb.MACState with QueuedJoinAccept set to v.
func (macStateOptions) WithQueuedJoinAccept(v *ttnpb.MACState_JoinAccept) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.QueuedJoinAccept = v
		return x
	}
}

// WithPendingJoinRequest returns a MACStateOption, which returns a copy of ttnpb.MACState with PendingJoinRequest set to v.
func (macStateOptions) WithPendingJoinRequest(v *ttnpb.MACState_JoinRequest) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.PendingJoinRequest = v
		return x
	}
}

// WithRxWindowsAvailable returns a MACStateOption, which returns a copy of ttnpb.MACState with RxWindowsAvailable set to v.
func (macStateOptions) WithRxWindowsAvailable(v bool) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.RxWindowsAvailable = v
		return x
	}
}

// WithRecentUplinks returns a MACStateOption, which returns a copy of ttnpb.MACState with RecentUplinks set to vs.
func (macStateOptions) WithRecentUplinks(vs ...*ttnpb.UplinkMessage) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.RecentUplinks = vs
		return x
	}
}

// WithRecentDownlinks returns a MACStateOption, which returns a copy of ttnpb.MACState with RecentDownlinks set to vs.
func (macStateOptions) WithRecentDownlinks(vs ...*ttnpb.DownlinkMessage) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.RecentDownlinks = vs
		return x
	}
}

// WithLastNetworkInitiatedDownlinkAt returns a MACStateOption, which returns a copy of ttnpb.MACState with LastNetworkInitiatedDownlinkAt set to v.
func (macStateOptions) WithLastNetworkInitiatedDownlinkAt(v *time.Time) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.LastNetworkInitiatedDownlinkAt = v
		return x
	}
}

// WithRejectedADRDataRateIndexes returns a MACStateOption, which returns a copy of ttnpb.MACState with RejectedADRDataRateIndexes set to vs.
func (macStateOptions) WithRejectedADRDataRateIndexes(vs ...ttnpb.DataRateIndex) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.RejectedADRDataRateIndexes = vs
		return x
	}
}

// WithRejectedADRTxPowerIndexes returns a MACStateOption, which returns a copy of ttnpb.MACState with RejectedADRTxPowerIndexes set to vs.
func (macStateOptions) WithRejectedADRTxPowerIndexes(vs ...uint32) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.RejectedADRTxPowerIndexes = vs
		return x
	}
}

// WithRejectedFrequencies returns a MACStateOption, which returns a copy of ttnpb.MACState with RejectedFrequencies set to vs.
func (macStateOptions) WithRejectedFrequencies(vs ...uint64) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.RejectedFrequencies = vs
		return x
	}
}

// WithLastDownlinkAt returns a MACStateOption, which returns a copy of ttnpb.MACState with LastDownlinkAt set to v.
func (macStateOptions) WithLastDownlinkAt(v *time.Time) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.LastDownlinkAt = v
		return x
	}
}

// WithRejectedDataRateRanges returns a MACStateOption, which returns a copy of ttnpb.MACState with RejectedDataRateRanges set to v.
func (macStateOptions) WithRejectedDataRateRanges(v map[uint64]*ttnpb.MACState_DataRateRanges) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.RejectedDataRateRanges = v
		return x
	}
}

// WithLastADRChangeFCntUp returns a MACStateOption, which returns a copy of ttnpb.MACState with LastADRChangeFCntUp set to v.
func (macStateOptions) WithLastADRChangeFCntUp(v uint32) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x.LastADRChangeFCntUp = v
		return x
	}
}

// Compose returns a functional composition of opts as a singular MACStateOption.
func (macStateOptions) Compose(opts ...MACStateOption) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		for _, opt := range opts {
			x = opt(x)
		}
		return x
	}
}

// Compose returns a functional composition of f and opts as a singular MACStateOption.
func (f MACStateOption) Compose(opts ...MACStateOption) MACStateOption {
	return func(x ttnpb.MACState) ttnpb.MACState {
		x = f(x)
		for _, opt := range opts {
			x = opt(x)
		}
		return x
	}
}

// MACStateOptions is namespace containing ttnpb.MACState options.
var MACStateOptions macStateOptions

// MakeMACState constructs a new ttnpb.MACState.
func MakeMACState(opts ...MACStateOption) *ttnpb.MACState {
	v := MACStateOptions.Compose(opts...)(baseMACState)
	return &v
}

type (
	// EndDeviceIdentifiersOption transforms ttnpb.EndDeviceIdentifiers and returns it.
	// Implemetations must be pure functions with no side-effects.
	EndDeviceIdentifiersOption func(ttnpb.EndDeviceIdentifiers) ttnpb.EndDeviceIdentifiers

	// endDeviceIdentifiersOptions represents the namespace, on which various EndDeviceIdentifiersOption are defined.
	endDeviceIdentifiersOptions struct{}
)

// WithDeviceID returns a EndDeviceIdentifiersOption, which returns a copy of ttnpb.EndDeviceIdentifiers with DeviceID set to v.
func (endDeviceIdentifiersOptions) WithDeviceID(v string) EndDeviceIdentifiersOption {
	return func(x ttnpb.EndDeviceIdentifiers) ttnpb.EndDeviceIdentifiers {
		x.DeviceID = v
		return x
	}
}

// WithApplicationIdentifiers returns a EndDeviceIdentifiersOption, which returns a copy of ttnpb.EndDeviceIdentifiers with ApplicationIdentifiers set to v.
func (endDeviceIdentifiersOptions) WithApplicationIdentifiers(v ttnpb.ApplicationIdentifiers) EndDeviceIdentifiersOption {
	return func(x ttnpb.EndDeviceIdentifiers) ttnpb.EndDeviceIdentifiers {
		x.ApplicationIdentifiers = v
		return x
	}
}

// WithDevEUI returns a EndDeviceIdentifiersOption, which returns a copy of ttnpb.EndDeviceIdentifiers with DevEUI set to v.
func (endDeviceIdentifiersOptions) WithDevEUI(v *types.EUI64) EndDeviceIdentifiersOption {
	return func(x ttnpb.EndDeviceIdentifiers) ttnpb.EndDeviceIdentifiers {
		x.DevEUI = v
		return x
	}
}

// WithJoinEUI returns a EndDeviceIdentifiersOption, which returns a copy of ttnpb.EndDeviceIdentifiers with JoinEUI set to v.
func (endDeviceIdentifiersOptions) WithJoinEUI(v *types.EUI64) EndDeviceIdentifiersOption {
	return func(x ttnpb.EndDeviceIdentifiers) ttnpb.EndDeviceIdentifiers {
		x.JoinEUI = v
		return x
	}
}

// WithDevAddr returns a EndDeviceIdentifiersOption, which returns a copy of ttnpb.EndDeviceIdentifiers with DevAddr set to v.
func (endDeviceIdentifiersOptions) WithDevAddr(v *types.DevAddr) EndDeviceIdentifiersOption {
	return func(x ttnpb.EndDeviceIdentifiers) ttnpb.EndDeviceIdentifiers {
		x.DevAddr = v
		return x
	}
}

// Compose returns a functional composition of opts as a singular EndDeviceIdentifiersOption.
func (endDeviceIdentifiersOptions) Compose(opts ...EndDeviceIdentifiersOption) EndDeviceIdentifiersOption {
	return func(x ttnpb.EndDeviceIdentifiers) ttnpb.EndDeviceIdentifiers {
		for _, opt := range opts {
			x = opt(x)
		}
		return x
	}
}

// Compose returns a functional composition of f and opts as a singular EndDeviceIdentifiersOption.
func (f EndDeviceIdentifiersOption) Compose(opts ...EndDeviceIdentifiersOption) EndDeviceIdentifiersOption {
	return func(x ttnpb.EndDeviceIdentifiers) ttnpb.EndDeviceIdentifiers {
		x = f(x)
		for _, opt := range opts {
			x = opt(x)
		}
		return x
	}
}

// EndDeviceIdentifiersOptions is namespace containing ttnpb.EndDeviceIdentifiers options.
var EndDeviceIdentifiersOptions endDeviceIdentifiersOptions

// MakeEndDeviceIdentifiers constructs a new ttnpb.EndDeviceIdentifiers.
func MakeEndDeviceIdentifiers(opts ...EndDeviceIdentifiersOption) *ttnpb.EndDeviceIdentifiers {
	v := EndDeviceIdentifiersOptions.Compose(opts...)(baseEndDeviceIdentifiers)
	return &v
}

type (
	// EndDeviceOption transforms ttnpb.EndDevice and returns it.
	// Implemetations must be pure functions with no side-effects.
	EndDeviceOption func(ttnpb.EndDevice) ttnpb.EndDevice

	// endDeviceOptions represents the namespace, on which various EndDeviceOption are defined.
	endDeviceOptions struct{}
)

// WithEndDeviceIdentifiers returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with EndDeviceIdentifiers set to v.
func (endDeviceOptions) WithEndDeviceIdentifiers(v ttnpb.EndDeviceIdentifiers) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.EndDeviceIdentifiers = v
		return x
	}
}

// WithCreatedAt returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with CreatedAt set to v.
func (endDeviceOptions) WithCreatedAt(v time.Time) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.CreatedAt = v
		return x
	}
}

// WithUpdatedAt returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with UpdatedAt set to v.
func (endDeviceOptions) WithUpdatedAt(v time.Time) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.UpdatedAt = v
		return x
	}
}

// WithName returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with Name set to v.
func (endDeviceOptions) WithName(v string) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.Name = v
		return x
	}
}

// WithDescription returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with Description set to v.
func (endDeviceOptions) WithDescription(v string) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.Description = v
		return x
	}
}

// WithAttributes returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with Attributes set to v.
func (endDeviceOptions) WithAttributes(v map[string]string) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.Attributes = v
		return x
	}
}

// WithVersionIDs returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with VersionIDs set to v.
func (endDeviceOptions) WithVersionIDs(v *ttnpb.EndDeviceVersionIdentifiers) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.VersionIDs = v
		return x
	}
}

// WithServiceProfileID returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with ServiceProfileID set to v.
func (endDeviceOptions) WithServiceProfileID(v string) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.ServiceProfileID = v
		return x
	}
}

// WithNetworkServerAddress returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with NetworkServerAddress set to v.
func (endDeviceOptions) WithNetworkServerAddress(v string) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.NetworkServerAddress = v
		return x
	}
}

// WithNetworkServerKEKLabel returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with NetworkServerKEKLabel set to v.
func (endDeviceOptions) WithNetworkServerKEKLabel(v string) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.NetworkServerKEKLabel = v
		return x
	}
}

// WithApplicationServerAddress returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with ApplicationServerAddress set to v.
func (endDeviceOptions) WithApplicationServerAddress(v string) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.ApplicationServerAddress = v
		return x
	}
}

// WithApplicationServerKEKLabel returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with ApplicationServerKEKLabel set to v.
func (endDeviceOptions) WithApplicationServerKEKLabel(v string) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.ApplicationServerKEKLabel = v
		return x
	}
}

// WithApplicationServerID returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with ApplicationServerID set to v.
func (endDeviceOptions) WithApplicationServerID(v string) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.ApplicationServerID = v
		return x
	}
}

// WithJoinServerAddress returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with JoinServerAddress set to v.
func (endDeviceOptions) WithJoinServerAddress(v string) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.JoinServerAddress = v
		return x
	}
}

// WithLocations returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with Locations set to v.
func (endDeviceOptions) WithLocations(v map[string]*ttnpb.Location) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.Locations = v
		return x
	}
}

// WithPicture returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with Picture set to v.
func (endDeviceOptions) WithPicture(v *ttnpb.Picture) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.Picture = v
		return x
	}
}

// WithSupportsClassB returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with SupportsClassB set to v.
func (endDeviceOptions) WithSupportsClassB(v bool) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.SupportsClassB = v
		return x
	}
}

// WithSupportsClassC returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with SupportsClassC set to v.
func (endDeviceOptions) WithSupportsClassC(v bool) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.SupportsClassC = v
		return x
	}
}

// WithLoRaWANVersion returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with LoRaWANVersion set to v.
func (endDeviceOptions) WithLoRaWANVersion(v ttnpb.MACVersion) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.LoRaWANVersion = v
		return x
	}
}

// WithLoRaWANPHYVersion returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with LoRaWANPHYVersion set to v.
func (endDeviceOptions) WithLoRaWANPHYVersion(v ttnpb.PHYVersion) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.LoRaWANPHYVersion = v
		return x
	}
}

// WithFrequencyPlanID returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with FrequencyPlanID set to v.
func (endDeviceOptions) WithFrequencyPlanID(v string) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.FrequencyPlanID = v
		return x
	}
}

// WithMinFrequency returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with MinFrequency set to v.
func (endDeviceOptions) WithMinFrequency(v uint64) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.MinFrequency = v
		return x
	}
}

// WithMaxFrequency returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with MaxFrequency set to v.
func (endDeviceOptions) WithMaxFrequency(v uint64) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.MaxFrequency = v
		return x
	}
}

// WithSupportsJoin returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with SupportsJoin set to v.
func (endDeviceOptions) WithSupportsJoin(v bool) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.SupportsJoin = v
		return x
	}
}

// WithResetsJoinNonces returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with ResetsJoinNonces set to v.
func (endDeviceOptions) WithResetsJoinNonces(v bool) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.ResetsJoinNonces = v
		return x
	}
}

// WithRootKeys returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with RootKeys set to v.
func (endDeviceOptions) WithRootKeys(v *ttnpb.RootKeys) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.RootKeys = v
		return x
	}
}

// WithNetID returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with NetID set to v.
func (endDeviceOptions) WithNetID(v *types.NetID) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.NetID = v
		return x
	}
}

// WithMACSettings returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with MACSettings set to v.
func (endDeviceOptions) WithMACSettings(v *ttnpb.MACSettings) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.MACSettings = v
		return x
	}
}

// WithMACState returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with MACState set to v.
func (endDeviceOptions) WithMACState(v *ttnpb.MACState) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.MACState = v
		return x
	}
}

// WithPendingMACState returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with PendingMACState set to v.
func (endDeviceOptions) WithPendingMACState(v *ttnpb.MACState) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.PendingMACState = v
		return x
	}
}

// WithSession returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with Session set to v.
func (endDeviceOptions) WithSession(v *ttnpb.Session) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.Session = v
		return x
	}
}

// WithPendingSession returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with PendingSession set to v.
func (endDeviceOptions) WithPendingSession(v *ttnpb.Session) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.PendingSession = v
		return x
	}
}

// WithLastDevNonce returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with LastDevNonce set to v.
func (endDeviceOptions) WithLastDevNonce(v uint32) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.LastDevNonce = v
		return x
	}
}

// WithUsedDevNonces returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with UsedDevNonces set to vs.
func (endDeviceOptions) WithUsedDevNonces(vs ...uint32) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.UsedDevNonces = vs
		return x
	}
}

// WithLastJoinNonce returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with LastJoinNonce set to v.
func (endDeviceOptions) WithLastJoinNonce(v uint32) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.LastJoinNonce = v
		return x
	}
}

// WithLastRJCount0 returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with LastRJCount0 set to v.
func (endDeviceOptions) WithLastRJCount0(v uint32) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.LastRJCount0 = v
		return x
	}
}

// WithLastRJCount1 returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with LastRJCount1 set to v.
func (endDeviceOptions) WithLastRJCount1(v uint32) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.LastRJCount1 = v
		return x
	}
}

// WithLastDevStatusReceivedAt returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with LastDevStatusReceivedAt set to v.
func (endDeviceOptions) WithLastDevStatusReceivedAt(v *time.Time) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.LastDevStatusReceivedAt = v
		return x
	}
}

// WithPowerState returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with PowerState set to v.
func (endDeviceOptions) WithPowerState(v ttnpb.PowerState) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.PowerState = v
		return x
	}
}

// WithBatteryPercentage returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with BatteryPercentage set to v.
func (endDeviceOptions) WithBatteryPercentage(v *pbtypes.FloatValue) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.BatteryPercentage = v
		return x
	}
}

// WithDownlinkMargin returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with DownlinkMargin set to v.
func (endDeviceOptions) WithDownlinkMargin(v int32) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.DownlinkMargin = v
		return x
	}
}

// WithQueuedApplicationDownlinks returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with QueuedApplicationDownlinks set to vs.
func (endDeviceOptions) WithQueuedApplicationDownlinks(vs ...*ttnpb.ApplicationDownlink) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.QueuedApplicationDownlinks = vs
		return x
	}
}

// WithFormatters returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with Formatters set to v.
func (endDeviceOptions) WithFormatters(v *ttnpb.MessagePayloadFormatters) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.Formatters = v
		return x
	}
}

// WithProvisionerID returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with ProvisionerID set to v.
func (endDeviceOptions) WithProvisionerID(v string) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.ProvisionerID = v
		return x
	}
}

// WithProvisioningData returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with ProvisioningData set to v.
func (endDeviceOptions) WithProvisioningData(v *pbtypes.Struct) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.ProvisioningData = v
		return x
	}
}

// WithMulticast returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with Multicast set to v.
func (endDeviceOptions) WithMulticast(v bool) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.Multicast = v
		return x
	}
}

// WithClaimAuthenticationCode returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with ClaimAuthenticationCode set to v.
func (endDeviceOptions) WithClaimAuthenticationCode(v *ttnpb.EndDeviceAuthenticationCode) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.ClaimAuthenticationCode = v
		return x
	}
}

// WithSkipPayloadCrypto returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with SkipPayloadCrypto set to v.
func (endDeviceOptions) WithSkipPayloadCrypto(v bool) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.SkipPayloadCrypto = v
		return x
	}
}

// WithSkipPayloadCryptoOverride returns a EndDeviceOption, which returns a copy of ttnpb.EndDevice with SkipPayloadCryptoOverride set to v.
func (endDeviceOptions) WithSkipPayloadCryptoOverride(v *pbtypes.BoolValue) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x.SkipPayloadCryptoOverride = v
		return x
	}
}

// Compose returns a functional composition of opts as a singular EndDeviceOption.
func (endDeviceOptions) Compose(opts ...EndDeviceOption) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		for _, opt := range opts {
			x = opt(x)
		}
		return x
	}
}

// Compose returns a functional composition of f and opts as a singular EndDeviceOption.
func (f EndDeviceOption) Compose(opts ...EndDeviceOption) EndDeviceOption {
	return func(x ttnpb.EndDevice) ttnpb.EndDevice {
		x = f(x)
		for _, opt := range opts {
			x = opt(x)
		}
		return x
	}
}

// EndDeviceOptions is namespace containing ttnpb.EndDevice options.
var EndDeviceOptions endDeviceOptions

// MakeEndDevice constructs a new ttnpb.EndDevice.
func MakeEndDevice(opts ...EndDeviceOption) *ttnpb.EndDevice {
	v := EndDeviceOptions.Compose(opts...)(baseEndDevice)
	return &v
}
