// Code generated by protoc-gen-fieldmask. DO NOT EDIT.

package ttnpb

import fmt "fmt"

var _ProcessUplinkMessageRequestFieldPaths = [...]string{
	"end_device_version_ids",
	"end_device_version_ids.brand_id",
	"end_device_version_ids.firmware_version",
	"end_device_version_ids.hardware_version",
	"end_device_version_ids.model_id",
	"ids",
	"ids.application_ids",
	"ids.application_ids.application_id",
	"ids.dev_addr",
	"ids.dev_eui",
	"ids.device_id",
	"ids.join_eui",
	"message",
	"message.decoded_payload",
	"message.f_cnt",
	"message.f_port",
	"message.frm_payload",
	"message.rx_metadata",
	"message.session_key_id",
	"parameter",
}

func (*ProcessUplinkMessageRequest) FieldMaskPaths() []string {
	ret := make([]string, len(_ProcessUplinkMessageRequestFieldPaths))
	copy(ret, _ProcessUplinkMessageRequestFieldPaths[:])
	return ret
}

func (dst *ProcessUplinkMessageRequest) SetFields(src *ProcessUplinkMessageRequest, paths ...string) {
	for _, path := range _cleanPaths(paths) {
		switch path {
		case "end_device_version_ids":
			dst.EndDeviceVersionIDs = src.EndDeviceVersionIDs
		case "end_device_version_ids.brand_id":
			dst.EndDeviceVersionIDs.SetFields(&src.EndDeviceVersionIDs, _pathsWithoutPrefix("end_device_version_ids", paths)...)
		case "end_device_version_ids.firmware_version":
			dst.EndDeviceVersionIDs.SetFields(&src.EndDeviceVersionIDs, _pathsWithoutPrefix("end_device_version_ids", paths)...)
		case "end_device_version_ids.hardware_version":
			dst.EndDeviceVersionIDs.SetFields(&src.EndDeviceVersionIDs, _pathsWithoutPrefix("end_device_version_ids", paths)...)
		case "end_device_version_ids.model_id":
			dst.EndDeviceVersionIDs.SetFields(&src.EndDeviceVersionIDs, _pathsWithoutPrefix("end_device_version_ids", paths)...)
		case "ids":
			dst.EndDeviceIdentifiers = src.EndDeviceIdentifiers
		case "ids.application_ids":
			dst.EndDeviceIdentifiers.SetFields(&src.EndDeviceIdentifiers, _pathsWithoutPrefix("ids", paths)...)
		case "ids.application_ids.application_id":
			dst.EndDeviceIdentifiers.SetFields(&src.EndDeviceIdentifiers, _pathsWithoutPrefix("ids", paths)...)
		case "ids.dev_addr":
			dst.EndDeviceIdentifiers.SetFields(&src.EndDeviceIdentifiers, _pathsWithoutPrefix("ids", paths)...)
		case "ids.dev_eui":
			dst.EndDeviceIdentifiers.SetFields(&src.EndDeviceIdentifiers, _pathsWithoutPrefix("ids", paths)...)
		case "ids.device_id":
			dst.EndDeviceIdentifiers.SetFields(&src.EndDeviceIdentifiers, _pathsWithoutPrefix("ids", paths)...)
		case "ids.join_eui":
			dst.EndDeviceIdentifiers.SetFields(&src.EndDeviceIdentifiers, _pathsWithoutPrefix("ids", paths)...)
		case "message":
			dst.Message = src.Message
		case "message.decoded_payload":
			dst.Message.SetFields(&src.Message, _pathsWithoutPrefix("message", paths)...)
		case "message.f_cnt":
			dst.Message.SetFields(&src.Message, _pathsWithoutPrefix("message", paths)...)
		case "message.f_port":
			dst.Message.SetFields(&src.Message, _pathsWithoutPrefix("message", paths)...)
		case "message.frm_payload":
			dst.Message.SetFields(&src.Message, _pathsWithoutPrefix("message", paths)...)
		case "message.rx_metadata":
			dst.Message.SetFields(&src.Message, _pathsWithoutPrefix("message", paths)...)
		case "message.session_key_id":
			dst.Message.SetFields(&src.Message, _pathsWithoutPrefix("message", paths)...)
		case "parameter":
			dst.Parameter = src.Parameter
		default:
			panic(fmt.Errorf("invalid field path: '%s'", path))
		}
	}
}

var _ProcessDownlinkMessageRequestFieldPaths = [...]string{
	"end_device_version_ids",
	"end_device_version_ids.brand_id",
	"end_device_version_ids.firmware_version",
	"end_device_version_ids.hardware_version",
	"end_device_version_ids.model_id",
	"ids",
	"ids.application_ids",
	"ids.application_ids.application_id",
	"ids.dev_addr",
	"ids.dev_eui",
	"ids.device_id",
	"ids.join_eui",
	"message",
	"message.class_b_c",
	"message.class_b_c.gateways",
	"message.class_b_c.time",
	"message.confirmed",
	"message.correlation_ids",
	"message.decoded_payload",
	"message.f_cnt",
	"message.f_port",
	"message.frm_payload",
	"message.session_key_id",
	"parameter",
}

func (*ProcessDownlinkMessageRequest) FieldMaskPaths() []string {
	ret := make([]string, len(_ProcessDownlinkMessageRequestFieldPaths))
	copy(ret, _ProcessDownlinkMessageRequestFieldPaths[:])
	return ret
}

func (dst *ProcessDownlinkMessageRequest) SetFields(src *ProcessDownlinkMessageRequest, paths ...string) {
	for _, path := range _cleanPaths(paths) {
		switch path {
		case "end_device_version_ids":
			dst.EndDeviceVersionIDs = src.EndDeviceVersionIDs
		case "end_device_version_ids.brand_id":
			dst.EndDeviceVersionIDs.SetFields(&src.EndDeviceVersionIDs, _pathsWithoutPrefix("end_device_version_ids", paths)...)
		case "end_device_version_ids.firmware_version":
			dst.EndDeviceVersionIDs.SetFields(&src.EndDeviceVersionIDs, _pathsWithoutPrefix("end_device_version_ids", paths)...)
		case "end_device_version_ids.hardware_version":
			dst.EndDeviceVersionIDs.SetFields(&src.EndDeviceVersionIDs, _pathsWithoutPrefix("end_device_version_ids", paths)...)
		case "end_device_version_ids.model_id":
			dst.EndDeviceVersionIDs.SetFields(&src.EndDeviceVersionIDs, _pathsWithoutPrefix("end_device_version_ids", paths)...)
		case "ids":
			dst.EndDeviceIdentifiers = src.EndDeviceIdentifiers
		case "ids.application_ids":
			dst.EndDeviceIdentifiers.SetFields(&src.EndDeviceIdentifiers, _pathsWithoutPrefix("ids", paths)...)
		case "ids.application_ids.application_id":
			dst.EndDeviceIdentifiers.SetFields(&src.EndDeviceIdentifiers, _pathsWithoutPrefix("ids", paths)...)
		case "ids.dev_addr":
			dst.EndDeviceIdentifiers.SetFields(&src.EndDeviceIdentifiers, _pathsWithoutPrefix("ids", paths)...)
		case "ids.dev_eui":
			dst.EndDeviceIdentifiers.SetFields(&src.EndDeviceIdentifiers, _pathsWithoutPrefix("ids", paths)...)
		case "ids.device_id":
			dst.EndDeviceIdentifiers.SetFields(&src.EndDeviceIdentifiers, _pathsWithoutPrefix("ids", paths)...)
		case "ids.join_eui":
			dst.EndDeviceIdentifiers.SetFields(&src.EndDeviceIdentifiers, _pathsWithoutPrefix("ids", paths)...)
		case "message":
			dst.Message = src.Message
		case "message.class_b_c":
			dst.Message.SetFields(&src.Message, _pathsWithoutPrefix("message", paths)...)
		case "message.class_b_c.gateways":
			dst.Message.SetFields(&src.Message, _pathsWithoutPrefix("message", paths)...)
		case "message.class_b_c.time":
			dst.Message.SetFields(&src.Message, _pathsWithoutPrefix("message", paths)...)
		case "message.confirmed":
			dst.Message.SetFields(&src.Message, _pathsWithoutPrefix("message", paths)...)
		case "message.correlation_ids":
			dst.Message.SetFields(&src.Message, _pathsWithoutPrefix("message", paths)...)
		case "message.decoded_payload":
			dst.Message.SetFields(&src.Message, _pathsWithoutPrefix("message", paths)...)
		case "message.f_cnt":
			dst.Message.SetFields(&src.Message, _pathsWithoutPrefix("message", paths)...)
		case "message.f_port":
			dst.Message.SetFields(&src.Message, _pathsWithoutPrefix("message", paths)...)
		case "message.frm_payload":
			dst.Message.SetFields(&src.Message, _pathsWithoutPrefix("message", paths)...)
		case "message.session_key_id":
			dst.Message.SetFields(&src.Message, _pathsWithoutPrefix("message", paths)...)
		case "parameter":
			dst.Parameter = src.Parameter
		default:
			panic(fmt.Errorf("invalid field path: '%s'", path))
		}
	}
}
