// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/oauth.proto

package ttnpb // import "go.thethings.network/lorawan-stack/pkg/ttnpb"

import proto "github.com/gogo/protobuf/proto"
import golang_proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/gogo/protobuf/types"

import time "time"

import github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"

import strings "strings"
import reflect "reflect"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type OAuthClientAuthorization struct {
	ClientIDs            ClientIdentifiers `protobuf:"bytes,1,opt,name=client_ids,json=clientIds" json:"client_ids"`
	UserIDs              UserIdentifiers   `protobuf:"bytes,2,opt,name=user_ids,json=userIds" json:"user_ids"`
	Rights               []Right           `protobuf:"varint,3,rep,packed,name=rights,enum=ttn.lorawan.v3.Right" json:"rights,omitempty"`
	CreatedAt            time.Time         `protobuf:"bytes,4,opt,name=created_at,json=createdAt,stdtime" json:"created_at"`
	UpdatedAt            time.Time         `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,stdtime" json:"updated_at"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OAuthClientAuthorization) Reset()      { *m = OAuthClientAuthorization{} }
func (*OAuthClientAuthorization) ProtoMessage() {}
func (*OAuthClientAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_oauth_26ab16057cc4dc44, []int{0}
}
func (m *OAuthClientAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OAuthClientAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OAuthClientAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *OAuthClientAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OAuthClientAuthorization.Merge(dst, src)
}
func (m *OAuthClientAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *OAuthClientAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_OAuthClientAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_OAuthClientAuthorization proto.InternalMessageInfo

func (m *OAuthClientAuthorization) GetClientIDs() ClientIdentifiers {
	if m != nil {
		return m.ClientIDs
	}
	return ClientIdentifiers{}
}

func (m *OAuthClientAuthorization) GetUserIDs() UserIdentifiers {
	if m != nil {
		return m.UserIDs
	}
	return UserIdentifiers{}
}

func (m *OAuthClientAuthorization) GetRights() []Right {
	if m != nil {
		return m.Rights
	}
	return nil
}

func (m *OAuthClientAuthorization) GetCreatedAt() time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return time.Time{}
}

func (m *OAuthClientAuthorization) GetUpdatedAt() time.Time {
	if m != nil {
		return m.UpdatedAt
	}
	return time.Time{}
}

type OAuthAuthorizationCode struct {
	ClientIDs            ClientIdentifiers `protobuf:"bytes,1,opt,name=client_ids,json=clientIds" json:"client_ids"`
	UserIDs              UserIdentifiers   `protobuf:"bytes,2,opt,name=user_ids,json=userIds" json:"user_ids"`
	Rights               []Right           `protobuf:"varint,3,rep,packed,name=rights,enum=ttn.lorawan.v3.Right" json:"rights,omitempty"`
	Code                 string            `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	RedirectURI          string            `protobuf:"bytes,5,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	State                string            `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	CreatedAt            time.Time         `protobuf:"bytes,7,opt,name=created_at,json=createdAt,stdtime" json:"created_at"`
	ExpiresAt            time.Time         `protobuf:"bytes,8,opt,name=expires_at,json=expiresAt,stdtime" json:"expires_at"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OAuthAuthorizationCode) Reset()      { *m = OAuthAuthorizationCode{} }
func (*OAuthAuthorizationCode) ProtoMessage() {}
func (*OAuthAuthorizationCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_oauth_26ab16057cc4dc44, []int{1}
}
func (m *OAuthAuthorizationCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OAuthAuthorizationCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OAuthAuthorizationCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *OAuthAuthorizationCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OAuthAuthorizationCode.Merge(dst, src)
}
func (m *OAuthAuthorizationCode) XXX_Size() int {
	return m.Size()
}
func (m *OAuthAuthorizationCode) XXX_DiscardUnknown() {
	xxx_messageInfo_OAuthAuthorizationCode.DiscardUnknown(m)
}

var xxx_messageInfo_OAuthAuthorizationCode proto.InternalMessageInfo

func (m *OAuthAuthorizationCode) GetClientIDs() ClientIdentifiers {
	if m != nil {
		return m.ClientIDs
	}
	return ClientIdentifiers{}
}

func (m *OAuthAuthorizationCode) GetUserIDs() UserIdentifiers {
	if m != nil {
		return m.UserIDs
	}
	return UserIdentifiers{}
}

func (m *OAuthAuthorizationCode) GetRights() []Right {
	if m != nil {
		return m.Rights
	}
	return nil
}

func (m *OAuthAuthorizationCode) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *OAuthAuthorizationCode) GetRedirectURI() string {
	if m != nil {
		return m.RedirectURI
	}
	return ""
}

func (m *OAuthAuthorizationCode) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *OAuthAuthorizationCode) GetCreatedAt() time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return time.Time{}
}

func (m *OAuthAuthorizationCode) GetExpiresAt() time.Time {
	if m != nil {
		return m.ExpiresAt
	}
	return time.Time{}
}

type OAuthAccessToken struct {
	ClientIDs            ClientIdentifiers `protobuf:"bytes,1,opt,name=client_ids,json=clientIds" json:"client_ids"`
	UserIDs              UserIdentifiers   `protobuf:"bytes,2,opt,name=user_ids,json=userIds" json:"user_ids"`
	Rights               []Right           `protobuf:"varint,3,rep,packed,name=rights,enum=ttn.lorawan.v3.Right" json:"rights,omitempty"`
	ID                   string            `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	AccessToken          string            `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken         string            `protobuf:"bytes,6,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	CreatedAt            time.Time         `protobuf:"bytes,7,opt,name=created_at,json=createdAt,stdtime" json:"created_at"`
	ExpiresAt            time.Time         `protobuf:"bytes,8,opt,name=expires_at,json=expiresAt,stdtime" json:"expires_at"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OAuthAccessToken) Reset()      { *m = OAuthAccessToken{} }
func (*OAuthAccessToken) ProtoMessage() {}
func (*OAuthAccessToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_oauth_26ab16057cc4dc44, []int{2}
}
func (m *OAuthAccessToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OAuthAccessToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OAuthAccessToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *OAuthAccessToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OAuthAccessToken.Merge(dst, src)
}
func (m *OAuthAccessToken) XXX_Size() int {
	return m.Size()
}
func (m *OAuthAccessToken) XXX_DiscardUnknown() {
	xxx_messageInfo_OAuthAccessToken.DiscardUnknown(m)
}

var xxx_messageInfo_OAuthAccessToken proto.InternalMessageInfo

func (m *OAuthAccessToken) GetClientIDs() ClientIdentifiers {
	if m != nil {
		return m.ClientIDs
	}
	return ClientIdentifiers{}
}

func (m *OAuthAccessToken) GetUserIDs() UserIdentifiers {
	if m != nil {
		return m.UserIDs
	}
	return UserIdentifiers{}
}

func (m *OAuthAccessToken) GetRights() []Right {
	if m != nil {
		return m.Rights
	}
	return nil
}

func (m *OAuthAccessToken) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *OAuthAccessToken) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *OAuthAccessToken) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *OAuthAccessToken) GetCreatedAt() time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return time.Time{}
}

func (m *OAuthAccessToken) GetExpiresAt() time.Time {
	if m != nil {
		return m.ExpiresAt
	}
	return time.Time{}
}

func init() {
	proto.RegisterType((*OAuthClientAuthorization)(nil), "ttn.lorawan.v3.OAuthClientAuthorization")
	golang_proto.RegisterType((*OAuthClientAuthorization)(nil), "ttn.lorawan.v3.OAuthClientAuthorization")
	proto.RegisterType((*OAuthAuthorizationCode)(nil), "ttn.lorawan.v3.OAuthAuthorizationCode")
	golang_proto.RegisterType((*OAuthAuthorizationCode)(nil), "ttn.lorawan.v3.OAuthAuthorizationCode")
	proto.RegisterType((*OAuthAccessToken)(nil), "ttn.lorawan.v3.OAuthAccessToken")
	golang_proto.RegisterType((*OAuthAccessToken)(nil), "ttn.lorawan.v3.OAuthAccessToken")
}
func (this *OAuthClientAuthorization) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*OAuthClientAuthorization)
	if !ok {
		that2, ok := that.(OAuthClientAuthorization)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ClientIDs.Equal(&that1.ClientIDs) {
		return false
	}
	if !this.UserIDs.Equal(&that1.UserIDs) {
		return false
	}
	if len(this.Rights) != len(that1.Rights) {
		return false
	}
	for i := range this.Rights {
		if this.Rights[i] != that1.Rights[i] {
			return false
		}
	}
	if !this.CreatedAt.Equal(that1.CreatedAt) {
		return false
	}
	if !this.UpdatedAt.Equal(that1.UpdatedAt) {
		return false
	}
	return true
}
func (this *OAuthAuthorizationCode) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*OAuthAuthorizationCode)
	if !ok {
		that2, ok := that.(OAuthAuthorizationCode)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ClientIDs.Equal(&that1.ClientIDs) {
		return false
	}
	if !this.UserIDs.Equal(&that1.UserIDs) {
		return false
	}
	if len(this.Rights) != len(that1.Rights) {
		return false
	}
	for i := range this.Rights {
		if this.Rights[i] != that1.Rights[i] {
			return false
		}
	}
	if this.Code != that1.Code {
		return false
	}
	if this.RedirectURI != that1.RedirectURI {
		return false
	}
	if this.State != that1.State {
		return false
	}
	if !this.CreatedAt.Equal(that1.CreatedAt) {
		return false
	}
	if !this.ExpiresAt.Equal(that1.ExpiresAt) {
		return false
	}
	return true
}
func (this *OAuthAccessToken) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*OAuthAccessToken)
	if !ok {
		that2, ok := that.(OAuthAccessToken)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ClientIDs.Equal(&that1.ClientIDs) {
		return false
	}
	if !this.UserIDs.Equal(&that1.UserIDs) {
		return false
	}
	if len(this.Rights) != len(that1.Rights) {
		return false
	}
	for i := range this.Rights {
		if this.Rights[i] != that1.Rights[i] {
			return false
		}
	}
	if this.ID != that1.ID {
		return false
	}
	if this.AccessToken != that1.AccessToken {
		return false
	}
	if this.RefreshToken != that1.RefreshToken {
		return false
	}
	if !this.CreatedAt.Equal(that1.CreatedAt) {
		return false
	}
	if !this.ExpiresAt.Equal(that1.ExpiresAt) {
		return false
	}
	return true
}
func (m *OAuthClientAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OAuthClientAuthorization) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintOauth(dAtA, i, uint64(m.ClientIDs.Size()))
	n1, err := m.ClientIDs.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n1
	dAtA[i] = 0x12
	i++
	i = encodeVarintOauth(dAtA, i, uint64(m.UserIDs.Size()))
	n2, err := m.UserIDs.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n2
	if len(m.Rights) > 0 {
		dAtA4 := make([]byte, len(m.Rights)*10)
		var j3 int
		for _, num := range m.Rights {
			for num >= 1<<7 {
				dAtA4[j3] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j3++
			}
			dAtA4[j3] = uint8(num)
			j3++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintOauth(dAtA, i, uint64(j3))
		i += copy(dAtA[i:], dAtA4[:j3])
	}
	dAtA[i] = 0x22
	i++
	i = encodeVarintOauth(dAtA, i, uint64(github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt)))
	n5, err := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.CreatedAt, dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n5
	dAtA[i] = 0x2a
	i++
	i = encodeVarintOauth(dAtA, i, uint64(github_com_gogo_protobuf_types.SizeOfStdTime(m.UpdatedAt)))
	n6, err := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.UpdatedAt, dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n6
	return i, nil
}

func (m *OAuthAuthorizationCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OAuthAuthorizationCode) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintOauth(dAtA, i, uint64(m.ClientIDs.Size()))
	n7, err := m.ClientIDs.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n7
	dAtA[i] = 0x12
	i++
	i = encodeVarintOauth(dAtA, i, uint64(m.UserIDs.Size()))
	n8, err := m.UserIDs.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n8
	if len(m.Rights) > 0 {
		dAtA10 := make([]byte, len(m.Rights)*10)
		var j9 int
		for _, num := range m.Rights {
			for num >= 1<<7 {
				dAtA10[j9] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j9++
			}
			dAtA10[j9] = uint8(num)
			j9++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintOauth(dAtA, i, uint64(j9))
		i += copy(dAtA[i:], dAtA10[:j9])
	}
	if len(m.Code) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintOauth(dAtA, i, uint64(len(m.Code)))
		i += copy(dAtA[i:], m.Code)
	}
	if len(m.RedirectURI) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintOauth(dAtA, i, uint64(len(m.RedirectURI)))
		i += copy(dAtA[i:], m.RedirectURI)
	}
	if len(m.State) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintOauth(dAtA, i, uint64(len(m.State)))
		i += copy(dAtA[i:], m.State)
	}
	dAtA[i] = 0x3a
	i++
	i = encodeVarintOauth(dAtA, i, uint64(github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt)))
	n11, err := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.CreatedAt, dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n11
	dAtA[i] = 0x42
	i++
	i = encodeVarintOauth(dAtA, i, uint64(github_com_gogo_protobuf_types.SizeOfStdTime(m.ExpiresAt)))
	n12, err := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.ExpiresAt, dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n12
	return i, nil
}

func (m *OAuthAccessToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OAuthAccessToken) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintOauth(dAtA, i, uint64(m.ClientIDs.Size()))
	n13, err := m.ClientIDs.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n13
	dAtA[i] = 0x12
	i++
	i = encodeVarintOauth(dAtA, i, uint64(m.UserIDs.Size()))
	n14, err := m.UserIDs.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n14
	if len(m.Rights) > 0 {
		dAtA16 := make([]byte, len(m.Rights)*10)
		var j15 int
		for _, num := range m.Rights {
			for num >= 1<<7 {
				dAtA16[j15] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j15++
			}
			dAtA16[j15] = uint8(num)
			j15++
		}
		dAtA[i] = 0x1a
		i++
		i = encodeVarintOauth(dAtA, i, uint64(j15))
		i += copy(dAtA[i:], dAtA16[:j15])
	}
	if len(m.ID) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintOauth(dAtA, i, uint64(len(m.ID)))
		i += copy(dAtA[i:], m.ID)
	}
	if len(m.AccessToken) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintOauth(dAtA, i, uint64(len(m.AccessToken)))
		i += copy(dAtA[i:], m.AccessToken)
	}
	if len(m.RefreshToken) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintOauth(dAtA, i, uint64(len(m.RefreshToken)))
		i += copy(dAtA[i:], m.RefreshToken)
	}
	dAtA[i] = 0x3a
	i++
	i = encodeVarintOauth(dAtA, i, uint64(github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt)))
	n17, err := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.CreatedAt, dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n17
	dAtA[i] = 0x42
	i++
	i = encodeVarintOauth(dAtA, i, uint64(github_com_gogo_protobuf_types.SizeOfStdTime(m.ExpiresAt)))
	n18, err := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.ExpiresAt, dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n18
	return i, nil
}

func encodeVarintOauth(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func NewPopulatedOAuthClientAuthorization(r randyOauth, easy bool) *OAuthClientAuthorization {
	this := &OAuthClientAuthorization{}
	v1 := NewPopulatedClientIdentifiers(r, easy)
	this.ClientIDs = *v1
	v2 := NewPopulatedUserIdentifiers(r, easy)
	this.UserIDs = *v2
	v3 := r.Intn(10)
	this.Rights = make([]Right, v3)
	for i := 0; i < v3; i++ {
		this.Rights[i] = Right([]int32{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51}[r.Intn(52)])
	}
	v4 := github_com_gogo_protobuf_types.NewPopulatedStdTime(r, easy)
	this.CreatedAt = *v4
	v5 := github_com_gogo_protobuf_types.NewPopulatedStdTime(r, easy)
	this.UpdatedAt = *v5
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedOAuthAuthorizationCode(r randyOauth, easy bool) *OAuthAuthorizationCode {
	this := &OAuthAuthorizationCode{}
	v6 := NewPopulatedClientIdentifiers(r, easy)
	this.ClientIDs = *v6
	v7 := NewPopulatedUserIdentifiers(r, easy)
	this.UserIDs = *v7
	v8 := r.Intn(10)
	this.Rights = make([]Right, v8)
	for i := 0; i < v8; i++ {
		this.Rights[i] = Right([]int32{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51}[r.Intn(52)])
	}
	this.Code = string(randStringOauth(r))
	this.RedirectURI = string(randStringOauth(r))
	this.State = string(randStringOauth(r))
	v9 := github_com_gogo_protobuf_types.NewPopulatedStdTime(r, easy)
	this.CreatedAt = *v9
	v10 := github_com_gogo_protobuf_types.NewPopulatedStdTime(r, easy)
	this.ExpiresAt = *v10
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedOAuthAccessToken(r randyOauth, easy bool) *OAuthAccessToken {
	this := &OAuthAccessToken{}
	v11 := NewPopulatedClientIdentifiers(r, easy)
	this.ClientIDs = *v11
	v12 := NewPopulatedUserIdentifiers(r, easy)
	this.UserIDs = *v12
	v13 := r.Intn(10)
	this.Rights = make([]Right, v13)
	for i := 0; i < v13; i++ {
		this.Rights[i] = Right([]int32{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51}[r.Intn(52)])
	}
	this.ID = string(randStringOauth(r))
	this.AccessToken = string(randStringOauth(r))
	this.RefreshToken = string(randStringOauth(r))
	v14 := github_com_gogo_protobuf_types.NewPopulatedStdTime(r, easy)
	this.CreatedAt = *v14
	v15 := github_com_gogo_protobuf_types.NewPopulatedStdTime(r, easy)
	this.ExpiresAt = *v15
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

type randyOauth interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneOauth(r randyOauth) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringOauth(r randyOauth) string {
	v16 := r.Intn(100)
	tmps := make([]rune, v16)
	for i := 0; i < v16; i++ {
		tmps[i] = randUTF8RuneOauth(r)
	}
	return string(tmps)
}
func randUnrecognizedOauth(r randyOauth, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldOauth(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldOauth(dAtA []byte, r randyOauth, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateOauth(dAtA, uint64(key))
		v17 := r.Int63()
		if r.Intn(2) == 0 {
			v17 *= -1
		}
		dAtA = encodeVarintPopulateOauth(dAtA, uint64(v17))
	case 1:
		dAtA = encodeVarintPopulateOauth(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateOauth(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateOauth(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateOauth(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateOauth(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
func (m *OAuthClientAuthorization) Size() (n int) {
	var l int
	_ = l
	l = m.ClientIDs.Size()
	n += 1 + l + sovOauth(uint64(l))
	l = m.UserIDs.Size()
	n += 1 + l + sovOauth(uint64(l))
	if len(m.Rights) > 0 {
		l = 0
		for _, e := range m.Rights {
			l += sovOauth(uint64(e))
		}
		n += 1 + sovOauth(uint64(l)) + l
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt)
	n += 1 + l + sovOauth(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.UpdatedAt)
	n += 1 + l + sovOauth(uint64(l))
	return n
}

func (m *OAuthAuthorizationCode) Size() (n int) {
	var l int
	_ = l
	l = m.ClientIDs.Size()
	n += 1 + l + sovOauth(uint64(l))
	l = m.UserIDs.Size()
	n += 1 + l + sovOauth(uint64(l))
	if len(m.Rights) > 0 {
		l = 0
		for _, e := range m.Rights {
			l += sovOauth(uint64(e))
		}
		n += 1 + sovOauth(uint64(l)) + l
	}
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = len(m.RedirectURI)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt)
	n += 1 + l + sovOauth(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.ExpiresAt)
	n += 1 + l + sovOauth(uint64(l))
	return n
}

func (m *OAuthAccessToken) Size() (n int) {
	var l int
	_ = l
	l = m.ClientIDs.Size()
	n += 1 + l + sovOauth(uint64(l))
	l = m.UserIDs.Size()
	n += 1 + l + sovOauth(uint64(l))
	if len(m.Rights) > 0 {
		l = 0
		for _, e := range m.Rights {
			l += sovOauth(uint64(e))
		}
		n += 1 + sovOauth(uint64(l)) + l
	}
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = len(m.AccessToken)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = len(m.RefreshToken)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt)
	n += 1 + l + sovOauth(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.ExpiresAt)
	n += 1 + l + sovOauth(uint64(l))
	return n
}

func sovOauth(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozOauth(x uint64) (n int) {
	return sovOauth(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *OAuthClientAuthorization) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OAuthClientAuthorization{`,
		`ClientIDs:` + strings.Replace(strings.Replace(this.ClientIDs.String(), "ClientIdentifiers", "ClientIdentifiers", 1), `&`, ``, 1) + `,`,
		`UserIDs:` + strings.Replace(strings.Replace(this.UserIDs.String(), "UserIdentifiers", "UserIdentifiers", 1), `&`, ``, 1) + `,`,
		`Rights:` + fmt.Sprintf("%v", this.Rights) + `,`,
		`CreatedAt:` + strings.Replace(strings.Replace(this.CreatedAt.String(), "Timestamp", "types.Timestamp", 1), `&`, ``, 1) + `,`,
		`UpdatedAt:` + strings.Replace(strings.Replace(this.UpdatedAt.String(), "Timestamp", "types.Timestamp", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *OAuthAuthorizationCode) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OAuthAuthorizationCode{`,
		`ClientIDs:` + strings.Replace(strings.Replace(this.ClientIDs.String(), "ClientIdentifiers", "ClientIdentifiers", 1), `&`, ``, 1) + `,`,
		`UserIDs:` + strings.Replace(strings.Replace(this.UserIDs.String(), "UserIdentifiers", "UserIdentifiers", 1), `&`, ``, 1) + `,`,
		`Rights:` + fmt.Sprintf("%v", this.Rights) + `,`,
		`Code:` + fmt.Sprintf("%v", this.Code) + `,`,
		`RedirectURI:` + fmt.Sprintf("%v", this.RedirectURI) + `,`,
		`State:` + fmt.Sprintf("%v", this.State) + `,`,
		`CreatedAt:` + strings.Replace(strings.Replace(this.CreatedAt.String(), "Timestamp", "types.Timestamp", 1), `&`, ``, 1) + `,`,
		`ExpiresAt:` + strings.Replace(strings.Replace(this.ExpiresAt.String(), "Timestamp", "types.Timestamp", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *OAuthAccessToken) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OAuthAccessToken{`,
		`ClientIDs:` + strings.Replace(strings.Replace(this.ClientIDs.String(), "ClientIdentifiers", "ClientIdentifiers", 1), `&`, ``, 1) + `,`,
		`UserIDs:` + strings.Replace(strings.Replace(this.UserIDs.String(), "UserIdentifiers", "UserIdentifiers", 1), `&`, ``, 1) + `,`,
		`Rights:` + fmt.Sprintf("%v", this.Rights) + `,`,
		`ID:` + fmt.Sprintf("%v", this.ID) + `,`,
		`AccessToken:` + fmt.Sprintf("%v", this.AccessToken) + `,`,
		`RefreshToken:` + fmt.Sprintf("%v", this.RefreshToken) + `,`,
		`CreatedAt:` + strings.Replace(strings.Replace(this.CreatedAt.String(), "Timestamp", "types.Timestamp", 1), `&`, ``, 1) + `,`,
		`ExpiresAt:` + strings.Replace(strings.Replace(this.ExpiresAt.String(), "Timestamp", "types.Timestamp", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringOauth(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *OAuthClientAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOauth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OAuthClientAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OAuthClientAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientIDs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ClientIDs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserIDs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.UserIDs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v Right
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowOauth
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (Right(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Rights = append(m.Rights, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowOauth
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthOauth
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v Right
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowOauth
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (Right(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Rights = append(m.Rights, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Rights", wireType)
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.UpdatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOauth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOauth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OAuthAuthorizationCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOauth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OAuthAuthorizationCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OAuthAuthorizationCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientIDs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ClientIDs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserIDs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.UserIDs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v Right
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowOauth
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (Right(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Rights = append(m.Rights, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowOauth
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthOauth
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v Right
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowOauth
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (Right(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Rights = append(m.Rights, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Rights", wireType)
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RedirectURI", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RedirectURI = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiresAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.ExpiresAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOauth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOauth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OAuthAccessToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOauth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OAuthAccessToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OAuthAccessToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientIDs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ClientIDs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserIDs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.UserIDs.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v Right
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowOauth
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (Right(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Rights = append(m.Rights, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowOauth
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthOauth
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				for iNdEx < postIndex {
					var v Right
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowOauth
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (Right(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Rights = append(m.Rights, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Rights", wireType)
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccessToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RefreshToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiresAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.ExpiresAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOauth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOauth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipOauth(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowOauth
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthOauth
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowOauth
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipOauth(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthOauth = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowOauth   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("lorawan-stack/api/oauth.proto", fileDescriptor_oauth_26ab16057cc4dc44)
}
func init() {
	golang_proto.RegisterFile("lorawan-stack/api/oauth.proto", fileDescriptor_oauth_26ab16057cc4dc44)
}

var fileDescriptor_oauth_26ab16057cc4dc44 = []byte{
	// 634 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x94, 0xbd, 0x4f, 0x1b, 0x4b,
	0x14, 0xc5, 0x67, 0x6c, 0x30, 0x78, 0xcc, 0x83, 0xf7, 0x56, 0x2f, 0xc8, 0x42, 0xca, 0x35, 0x1f,
	0x0d, 0x45, 0x58, 0x4b, 0xf0, 0x17, 0xd8, 0xd0, 0xa0, 0x14, 0x91, 0x36, 0xd0, 0xa4, 0xb1, 0xd6,
	0xbb, 0xc3, 0x7a, 0x64, 0xd8, 0x59, 0xcd, 0xcc, 0x86, 0x28, 0x15, 0x25, 0x25, 0x65, 0xca, 0x28,
	0x15, 0x25, 0x25, 0x25, 0x25, 0x4d, 0x24, 0xd2, 0x51, 0x39, 0xec, 0x6c, 0x43, 0x49, 0x13, 0x89,
	0x32, 0xf2, 0xec, 0x58, 0x7c, 0x55, 0xa4, 0x8a, 0xe8, 0x66, 0xe6, 0x9e, 0xfb, 0xbb, 0xba, 0xe7,
	0x68, 0x97, 0xbc, 0xde, 0xe5, 0xc2, 0xdf, 0xf7, 0xe3, 0x15, 0xa9, 0xfc, 0xa0, 0xdf, 0xf4, 0x13,
	0xd6, 0xe4, 0x7e, 0xaa, 0x7a, 0x6e, 0x22, 0xb8, 0xe2, 0xce, 0xb4, 0x52, 0xb1, 0x6b, 0x25, 0xee,
	0xc7, 0xb5, 0xb9, 0x95, 0x88, 0xa9, 0x5e, 0xda, 0x75, 0x03, 0xbe, 0xd7, 0x8c, 0x78, 0xc4, 0x9b,
	0x46, 0xd6, 0x4d, 0x77, 0xcc, 0xcd, 0x5c, 0xcc, 0xa9, 0x68, 0x9f, 0x6b, 0x44, 0x9c, 0x47, 0xbb,
	0xf4, 0x4e, 0xa5, 0xd8, 0x1e, 0x95, 0xca, 0xdf, 0x4b, 0xac, 0x60, 0xe9, 0xe9, 0x78, 0x16, 0xd2,
	0x58, 0xb1, 0x1d, 0x46, 0x85, 0xb4, 0x22, 0x78, 0x2a, 0x12, 0x2c, 0xea, 0x29, 0x5b, 0x5f, 0xfc,
	0x55, 0x22, 0xf5, 0x77, 0xad, 0x54, 0xf5, 0xd6, 0x77, 0x19, 0x8d, 0xd5, 0xf0, 0xc4, 0x05, 0xfb,
	0xec, 0x2b, 0xc6, 0x63, 0xe7, 0x3d, 0x21, 0x81, 0x79, 0xee, 0xb0, 0x50, 0xd6, 0xf1, 0x3c, 0x5e,
	0xae, 0xad, 0x2e, 0xb8, 0x0f, 0xd7, 0x72, 0x8b, 0xc6, 0xcd, 0xbb, 0xc9, 0xed, 0xff, 0xce, 0x07,
	0x0d, 0xa4, 0x07, 0x8d, 0xaa, 0x2d, 0x6d, 0x48, 0xaf, 0x1a, 0x58, 0x95, 0x74, 0xde, 0x92, 0xc9,
	0x54, 0x52, 0x61, 0x90, 0x25, 0x83, 0x6c, 0x3c, 0x46, 0x6e, 0x4b, 0x2a, 0xee, 0x03, 0x67, 0x2c,
	0x70, 0xc2, 0x14, 0x36, 0xa4, 0x37, 0x91, 0x1a, 0x85, 0x74, 0x56, 0x48, 0xa5, 0x58, 0xa7, 0x5e,
	0x9e, 0x2f, 0x2f, 0x4f, 0xaf, 0xbe, 0x7a, 0x8c, 0xf2, 0x86, 0x55, 0xcf, 0x8a, 0x9c, 0x75, 0x42,
	0x02, 0x41, 0x7d, 0x45, 0xc3, 0x8e, 0xaf, 0xea, 0x63, 0x66, 0xfa, 0x9c, 0x5b, 0x18, 0xed, 0x8e,
	0x8c, 0x76, 0xb7, 0x46, 0x46, 0xb7, 0x27, 0x87, 0x83, 0x8f, 0x7e, 0x36, 0xb0, 0x57, 0xb5, 0x7d,
	0x2d, 0x35, 0x84, 0xa4, 0x49, 0x38, 0x82, 0x8c, 0x3f, 0x07, 0x62, 0xfb, 0x5a, 0x6a, 0xf1, 0x47,
	0x99, 0xcc, 0x1a, 0xdf, 0x1f, 0x38, 0xbe, 0xce, 0x43, 0xfa, 0xf2, 0x5c, 0x77, 0xc8, 0x58, 0xc0,
	0x43, 0x6a, 0xfc, 0xae, 0x7a, 0xe6, 0xec, 0xac, 0x92, 0x29, 0x41, 0x43, 0x26, 0x68, 0xa0, 0x3a,
	0xa9, 0x60, 0xc6, 0xc6, 0x6a, 0x7b, 0x46, 0x0f, 0x1a, 0x35, 0xcf, 0xbe, 0x6f, 0x7b, 0x9b, 0x5e,
	0x6d, 0x24, 0xda, 0x16, 0xcc, 0xf9, 0x9f, 0x8c, 0x4b, 0xe5, 0x2b, 0x5a, 0xaf, 0x18, 0x50, 0x71,
	0x79, 0x94, 0xe9, 0xc4, 0x1f, 0x67, 0x4a, 0x3f, 0x25, 0x4c, 0x50, 0x39, 0x84, 0x4c, 0x3e, 0x07,
	0x62, 0xfb, 0x5a, 0x6a, 0xf1, 0x7b, 0x99, 0xfc, 0x5b, 0x64, 0x1a, 0x04, 0x54, 0xca, 0x2d, 0xde,
	0xa7, 0x2f, 0xf0, 0x1b, 0x9a, 0x25, 0x25, 0x16, 0x16, 0x59, 0xb6, 0x2b, 0x7a, 0xd0, 0x28, 0x6d,
	0x6e, 0x78, 0x25, 0x16, 0x3a, 0x0b, 0x64, 0xca, 0x37, 0x7b, 0x77, 0xd4, 0x70, 0xf1, 0x22, 0x51,
	0xaf, 0xe6, 0xdf, 0xf3, 0x62, 0x89, 0xfc, 0x23, 0xe8, 0x8e, 0xa0, 0xb2, 0x67, 0x35, 0x45, 0x90,
	0x53, 0xf6, 0xb1, 0x10, 0xfd, 0x35, 0x79, 0xb6, 0xbf, 0xe1, 0xf3, 0x0c, 0xf0, 0x45, 0x06, 0xf8,
	0x32, 0x03, 0x74, 0x95, 0x01, 0xba, 0xce, 0x00, 0xdd, 0x64, 0x80, 0x6e, 0x33, 0xc0, 0x07, 0x1a,
	0xf0, 0xa1, 0x06, 0x74, 0xac, 0x01, 0x9f, 0x68, 0x40, 0xa7, 0x1a, 0xd0, 0x99, 0x06, 0x74, 0xae,
	0x01, 0x5f, 0x68, 0xc0, 0x97, 0x1a, 0xd0, 0x95, 0x06, 0x7c, 0xad, 0x01, 0xdd, 0x68, 0xc0, 0xb7,
	0x1a, 0xd0, 0x41, 0x0e, 0xe8, 0x30, 0x07, 0x7c, 0x94, 0x03, 0xfa, 0x92, 0x03, 0xfe, 0x9a, 0x03,
	0x3a, 0xce, 0x01, 0x9d, 0xe4, 0x80, 0x4f, 0x73, 0xc0, 0x67, 0x39, 0xe0, 0x0f, 0x6f, 0x22, 0xee,
	0xaa, 0x1e, 0x55, 0x3d, 0x16, 0x47, 0xd2, 0x8d, 0xa9, 0xda, 0xe7, 0xa2, 0xdf, 0x7c, 0xf8, 0x1f,
	0x4f, 0xfa, 0x51, 0x53, 0xa9, 0x38, 0xe9, 0x76, 0x2b, 0x66, 0x9b, 0xb5, 0xdf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x35, 0x17, 0xc1, 0x33, 0x8d, 0x06, 0x00, 0x00,
}
