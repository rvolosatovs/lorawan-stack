// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/user.proto

package ttnpb // import "go.thethings.network/lorawan-stack/pkg/ttnpb"

import github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/protobuf/field_mask"

import time "time"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

func (this *User) Validate() error {
	if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(&(this.UserIdentifiers)); err != nil {
		return github_com_mwitkow_go_proto_validators.FieldError("UserIdentifiers", err)
	}
	if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(&(this.CreatedAt)); err != nil {
		return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
	}
	if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(&(this.UpdatedAt)); err != nil {
		return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
	}
	// Validation of proto3 map<> fields is unsupported.
	for _, item := range this.ContactInfo {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("ContactInfo", err)
			}
		}
	}
	if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(&(this.PasswordUpdatedAt)); err != nil {
		return github_com_mwitkow_go_proto_validators.FieldError("PasswordUpdatedAt", err)
	}
	if this.TemporaryPasswordCreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TemporaryPasswordCreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TemporaryPasswordCreatedAt", err)
		}
	}
	if this.TemporaryPasswordExpiresAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.TemporaryPasswordExpiresAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("TemporaryPasswordExpiresAt", err)
		}
	}
	return nil
}
func (this *Users) Validate() error {
	for _, item := range this.Users {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Users", err)
			}
		}
	}
	return nil
}
func (this *GetUserRequest) Validate() error {
	if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(&(this.UserIdentifiers)); err != nil {
		return github_com_mwitkow_go_proto_validators.FieldError("UserIdentifiers", err)
	}
	if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(&(this.FieldMask)); err != nil {
		return github_com_mwitkow_go_proto_validators.FieldError("FieldMask", err)
	}
	return nil
}
func (this *CreateUserRequest) Validate() error {
	if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(&(this.User)); err != nil {
		return github_com_mwitkow_go_proto_validators.FieldError("User", err)
	}
	return nil
}
func (this *UpdateUserRequest) Validate() error {
	if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(&(this.User)); err != nil {
		return github_com_mwitkow_go_proto_validators.FieldError("User", err)
	}
	if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(&(this.FieldMask)); err != nil {
		return github_com_mwitkow_go_proto_validators.FieldError("FieldMask", err)
	}
	return nil
}
func (this *CreateTemporaryPasswordRequest) Validate() error {
	if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(&(this.UserIdentifiers)); err != nil {
		return github_com_mwitkow_go_proto_validators.FieldError("UserIdentifiers", err)
	}
	return nil
}
func (this *UpdateUserPasswordRequest) Validate() error {
	if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(&(this.UserIdentifiers)); err != nil {
		return github_com_mwitkow_go_proto_validators.FieldError("UserIdentifiers", err)
	}
	return nil
}
func (this *CreateUserAPIKeyRequest) Validate() error {
	if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(&(this.UserIdentifiers)); err != nil {
		return github_com_mwitkow_go_proto_validators.FieldError("UserIdentifiers", err)
	}
	return nil
}
func (this *UpdateUserAPIKeyRequest) Validate() error {
	if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(&(this.UserIdentifiers)); err != nil {
		return github_com_mwitkow_go_proto_validators.FieldError("UserIdentifiers", err)
	}
	if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(&(this.APIKey)); err != nil {
		return github_com_mwitkow_go_proto_validators.FieldError("APIKey", err)
	}
	return nil
}
func (this *Invitation) Validate() error {
	if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(&(this.ExpiresAt)); err != nil {
		return github_com_mwitkow_go_proto_validators.FieldError("ExpiresAt", err)
	}
	if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(&(this.CreatedAt)); err != nil {
		return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
	}
	if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(&(this.UpdatedAt)); err != nil {
		return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
	}
	return nil
}
func (this *Invitations) Validate() error {
	for _, item := range this.Invitations {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Invitations", err)
			}
		}
	}
	return nil
}
func (this *SendInvitationRequest) Validate() error {
	return nil
}
func (this *DeleteInvitationRequest) Validate() error {
	return nil
}
