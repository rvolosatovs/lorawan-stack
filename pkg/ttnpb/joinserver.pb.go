// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/TheThingsNetwork/ttn/api/joinserver.proto

package ttnpb

import proto "github.com/gogo/protobuf/proto"
import golang_proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for NsJs service

type NsJsClient interface {
	HandleJoin(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error)
}

type nsJsClient struct {
	cc *grpc.ClientConn
}

func NewNsJsClient(cc *grpc.ClientConn) NsJsClient {
	return &nsJsClient{cc}
}

func (c *nsJsClient) HandleJoin(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*JoinResponse, error) {
	out := new(JoinResponse)
	err := grpc.Invoke(ctx, "/ttn.v3.NsJs/HandleJoin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for NsJs service

type NsJsServer interface {
	HandleJoin(context.Context, *JoinRequest) (*JoinResponse, error)
}

func RegisterNsJsServer(s *grpc.Server, srv NsJsServer) {
	s.RegisterService(&_NsJs_serviceDesc, srv)
}

func _NsJs_HandleJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NsJsServer).HandleJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ttn.v3.NsJs/HandleJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NsJsServer).HandleJoin(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NsJs_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ttn.v3.NsJs",
	HandlerType: (*NsJsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleJoin",
			Handler:    _NsJs_HandleJoin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/TheThingsNetwork/ttn/api/joinserver.proto",
}

func init() {
	proto.RegisterFile("github.com/TheThingsNetwork/ttn/api/joinserver.proto", fileDescriptorJoinserver)
}
func init() {
	golang_proto.RegisterFile("github.com/TheThingsNetwork/ttn/api/joinserver.proto", fileDescriptorJoinserver)
}

var fileDescriptorJoinserver = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x8f, 0x21, 0x50, 0x02, 0x41,
	0x14, 0x86, 0xdf, 0x9b, 0x71, 0x08, 0x17, 0xd1, 0x44, 0xf8, 0xbb, 0xc1, 0xbb, 0x19, 0x71, 0xc6,
	0xe8, 0x8c, 0xc9, 0x21, 0x10, 0x1c, 0x92, 0x8d, 0xd3, 0xf5, 0x38, 0xd1, 0xdd, 0xf3, 0x76, 0xc1,
	0x4a, 0x24, 0x1a, 0x6d, 0x1a, 0x89, 0x44, 0x22, 0x91, 0x48, 0x24, 0xb2, 0x6f, 0x0b, 0x91, 0x48,
	0x74, 0x38, 0x8a, 0x26, 0x4d, 0xef, 0x7d, 0xef, 0xfd, 0xff, 0xfc, 0xf3, 0x47, 0x17, 0x59, 0xee,
	0x7a, 0x83, 0x34, 0xbe, 0x37, 0x2f, 0x49, 0xa7, 0xa7, 0x3a, 0xbd, 0x5c, 0x67, 0xb6, 0xad, 0xdc,
	0x9b, 0x29, 0xfb, 0x89, 0x73, 0x3a, 0xe9, 0x16, 0x79, 0xf2, 0x64, 0x72, 0x6d, 0x55, 0x39, 0x54,
	0x65, 0x5c, 0x94, 0xc6, 0x99, 0x7a, 0xcd, 0x39, 0x1d, 0x0f, 0x9b, 0x8d, 0xb3, 0x1f, 0xee, 0xcc,
	0x64, 0x26, 0xa9, 0xde, 0xe9, 0xe0, 0xb1, 0xa2, 0x0a, 0xaa, 0xed, 0x60, 0x6b, 0xc4, 0xff, 0x0d,
	0x3b, 0xe8, 0xcf, 0xaf, 0xa2, 0xa3, 0xb6, 0x6d, 0xd9, 0xfa, 0x65, 0x14, 0xdd, 0x74, 0xf5, 0xc3,
	0xb3, 0x6a, 0x99, 0x5c, 0xd7, 0x8f, 0xe3, 0x43, 0x7a, 0xbc, 0xa7, 0x5b, 0xf5, 0x3a, 0x50, 0xd6,
	0x35, 0x4e, 0x7e, 0x1f, 0x6d, 0x61, 0xb4, 0x55, 0xd7, 0x9f, 0xbc, 0xf0, 0xe0, 0xa5, 0x07, 0xaf,
	0x3c, 0x78, 0xed, 0xc1, 0x1b, 0x0f, 0xda, 0x7a, 0xd0, 0xce, 0x83, 0x47, 0x02, 0x1a, 0x0b, 0x68,
	0x22, 0xe0, 0xa9, 0x80, 0x66, 0x02, 0x9e, 0x0b, 0x78, 0x21, 0xe0, 0xa5, 0x80, 0x57, 0x02, 0x5a,
	0x0b, 0x78, 0x23, 0xa0, 0xad, 0x80, 0x77, 0x02, 0x1a, 0x05, 0xd0, 0x38, 0x80, 0xdf, 0x03, 0xe8,
	0x23, 0x80, 0xbf, 0x02, 0x68, 0x12, 0x40, 0xd3, 0x00, 0x9e, 0x05, 0xf0, 0x3c, 0x80, 0xef, 0x4e,
	0xff, 0xea, 0x59, 0xf4, 0xb3, 0xfd, 0x2c, 0xd2, 0xb4, 0x56, 0x35, 0x6d, 0x7e, 0x07, 0x00, 0x00,
	0xff, 0xff, 0x01, 0xa8, 0x31, 0xa3, 0x88, 0x01, 0x00, 0x00,
}
