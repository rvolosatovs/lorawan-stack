// Code generated by protoc-gen-fieldmask. DO NOT EDIT.

package ttnpb

import fmt "fmt"

var _SearchEntitiesRequestFieldPaths = [...]string{
	"attributes_contain",
	"description_contains",
	"field_mask",
	"id_contains",
	"name_contains",
}

func (*SearchEntitiesRequest) FieldMaskPaths() []string {
	ret := make([]string, len(_SearchEntitiesRequestFieldPaths))
	copy(ret, _SearchEntitiesRequestFieldPaths[:])
	return ret
}

func (dst *SearchEntitiesRequest) SetFields(src *SearchEntitiesRequest, paths ...string) {
	for _, path := range _cleanPaths(paths) {
		switch path {
		case "attributes_contain":
			dst.AttributesContain = src.AttributesContain
		case "description_contains":
			dst.DescriptionContains = src.DescriptionContains
		case "field_mask":
			dst.FieldMask = src.FieldMask
		case "id_contains":
			dst.IDContains = src.IDContains
		case "name_contains":
			dst.NameContains = src.NameContains
		default:
			panic(fmt.Errorf("invalid field path: '%s'", path))
		}
	}
}

var _SearchEndDevicesRequestFieldPaths = [...]string{
	"application_ids",
	"application_ids.application_id",
	"attributes_contain",
	"description_contains",
	"dev_addr_contains",
	"dev_eui_contains",
	"field_mask",
	"id_contains",
	"join_eui_contains",
	"name_contains",
}

func (*SearchEndDevicesRequest) FieldMaskPaths() []string {
	ret := make([]string, len(_SearchEndDevicesRequestFieldPaths))
	copy(ret, _SearchEndDevicesRequestFieldPaths[:])
	return ret
}

func (dst *SearchEndDevicesRequest) SetFields(src *SearchEndDevicesRequest, paths ...string) {
	for _, path := range _cleanPaths(paths) {
		switch path {
		case "application_ids":
			dst.ApplicationIdentifiers = src.ApplicationIdentifiers
		case "application_ids.application_id":
			dst.ApplicationIdentifiers.SetFields(&src.ApplicationIdentifiers, _pathsWithoutPrefix("application_ids", paths)...)
		case "attributes_contain":
			dst.AttributesContain = src.AttributesContain
		case "description_contains":
			dst.DescriptionContains = src.DescriptionContains
		case "dev_addr_contains":
			dst.DevAddrContains = src.DevAddrContains
		case "dev_eui_contains":
			dst.DevEUIContains = src.DevEUIContains
		case "field_mask":
			dst.FieldMask = src.FieldMask
		case "id_contains":
			dst.IDContains = src.IDContains
		case "join_eui_contains":
			dst.JoinEUIContains = src.JoinEUIContains
		case "name_contains":
			dst.NameContains = src.NameContains
		default:
			panic(fmt.Errorf("invalid field path: '%s'", path))
		}
	}
}
