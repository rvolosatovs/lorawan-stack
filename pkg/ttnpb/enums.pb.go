// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/enums.proto

package ttnpb // import "go.thethings.network/lorawan-stack/pkg/ttnpb"

import proto "github.com/gogo/protobuf/proto"
import golang_proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import strconv "strconv"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// State enum defines states that an entity can be in.
type State int32

const (
	// Denotes that the entity has been requested and is pending review by an admin.
	STATE_REQUESTED State = 0
	// Denotes that the entity has been reviewed and approved by an admin.
	STATE_APPROVED State = 1
	// Denotes that the entity has been reviewed and rejected by an admin.
	STATE_REJECTED State = 2
	// Denotes that the entity has been flagged and is pending review by an admin.
	STATE_FLAGGED State = 3
	// Denotes that the entity has been reviewed and suspended by an admin.
	STATE_SUSPENDED State = 4
)

var State_name = map[int32]string{
	0: "STATE_REQUESTED",
	1: "STATE_APPROVED",
	2: "STATE_REJECTED",
	3: "STATE_FLAGGED",
	4: "STATE_SUSPENDED",
}
var State_value = map[string]int32{
	"STATE_REQUESTED": 0,
	"STATE_APPROVED":  1,
	"STATE_REJECTED":  2,
	"STATE_FLAGGED":   3,
	"STATE_SUSPENDED": 4,
}

func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_enums_38edac6f52749519, []int{0}
}

func init() {
	proto.RegisterEnum("ttn.lorawan.v3.State", State_name, State_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.State", State_name, State_value)
}
func (x State) String() string {
	s, ok := State_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

func init() {
	proto.RegisterFile("lorawan-stack/api/enums.proto", fileDescriptor_enums_38edac6f52749519)
}
func init() {
	golang_proto.RegisterFile("lorawan-stack/api/enums.proto", fileDescriptor_enums_38edac6f52749519)
}

var fileDescriptor_enums_38edac6f52749519 = []byte{
	// 333 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xb1, 0x4f, 0xea, 0x50,
	0x14, 0xc6, 0xcf, 0x79, 0x8f, 0xf7, 0x86, 0x26, 0x62, 0xad, 0x1b, 0x89, 0xe7, 0x0f, 0x30, 0xd2,
	0x0e, 0xfc, 0x05, 0x68, 0xaf, 0x24, 0xc6, 0x28, 0x52, 0x70, 0x70, 0x31, 0x2d, 0xa9, 0x85, 0x20,
	0xbd, 0x4d, 0xb9, 0xc8, 0xca, 0xc8, 0xe8, 0xe8, 0x68, 0x74, 0x61, 0x64, 0x64, 0x64, 0x64, 0x64,
	0x64, 0xe4, 0xde, 0xbb, 0x30, 0x32, 0x32, 0x1a, 0x8b, 0x09, 0x71, 0x3b, 0xdf, 0x2f, 0xbf, 0xf3,
	0x0d, 0x9f, 0x71, 0xf2, 0xcc, 0x53, 0x7f, 0xe0, 0xc7, 0xc5, 0x9e, 0xf0, 0x9b, 0x1d, 0xc7, 0x4f,
	0xda, 0x4e, 0x18, 0xf7, 0xbb, 0x3d, 0x3b, 0x49, 0xb9, 0xe0, 0x56, 0x5e, 0x88, 0xd8, 0xfe, 0x51,
	0xec, 0x97, 0x52, 0xa1, 0x18, 0xb5, 0x45, 0xab, 0x1f, 0xd8, 0x4d, 0xde, 0x75, 0x22, 0x1e, 0x71,
	0x27, 0xd3, 0x82, 0xfe, 0x53, 0x96, 0xb2, 0x90, 0x5d, 0xbb, 0xf7, 0xd3, 0xd4, 0xf8, 0xe7, 0x09,
	0x5f, 0x84, 0xd6, 0xb1, 0x71, 0xe8, 0xd5, 0xcb, 0x75, 0xf6, 0x58, 0x63, 0x77, 0x0d, 0xe6, 0xd5,
	0x99, 0x6b, 0x82, 0x65, 0x19, 0xf9, 0x1d, 0x2c, 0x57, 0xab, 0xb5, 0xdb, 0x7b, 0xe6, 0x9a, 0xb8,
	0x67, 0x35, 0x76, 0xc5, 0x2e, 0xbe, 0xbd, 0x3f, 0xd6, 0x91, 0x71, 0xb0, 0x63, 0x97, 0xd7, 0xe5,
	0x4a, 0x85, 0xb9, 0xe6, 0xdf, 0x7d, 0x9f, 0xd7, 0xf0, 0xaa, 0xec, 0xc6, 0x65, 0xae, 0x99, 0x2b,
	0xe4, 0x46, 0x9f, 0x04, 0xe7, 0x1f, 0x38, 0x97, 0x84, 0x0b, 0x49, 0xb8, 0x94, 0x04, 0x2b, 0x49,
	0xb0, 0x96, 0x04, 0x1b, 0x49, 0xb0, 0x95, 0x84, 0x43, 0x45, 0x38, 0x52, 0x04, 0x63, 0x45, 0x38,
	0x51, 0x04, 0x53, 0x45, 0x30, 0x53, 0x04, 0x73, 0x45, 0xb8, 0x50, 0x84, 0x4b, 0x45, 0xb0, 0x52,
	0x84, 0x6b, 0x45, 0xb0, 0x51, 0x84, 0x5b, 0x45, 0x30, 0xd4, 0x04, 0x23, 0x4d, 0xf8, 0xaa, 0x09,
	0xde, 0x34, 0xe1, 0xbb, 0x26, 0x18, 0x6b, 0x82, 0x89, 0x26, 0x9c, 0x6a, 0xc2, 0x99, 0x26, 0x7c,
	0x38, 0x8b, 0xb8, 0x2d, 0x5a, 0xa1, 0x68, 0xb5, 0xe3, 0xa8, 0x67, 0xc7, 0xa1, 0x18, 0xf0, 0xb4,
	0xe3, 0xfc, 0x5e, 0x37, 0xe9, 0x44, 0x8e, 0x10, 0x71, 0x12, 0x04, 0xff, 0xb3, 0x7d, 0x4a, 0x5f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x86, 0xda, 0x7f, 0x7f, 0x01, 0x00, 0x00,
}
