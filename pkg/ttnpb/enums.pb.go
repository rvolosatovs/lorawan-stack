// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/enums.proto

package ttnpb // import "go.thethings.network/lorawan-stack/pkg/ttnpb"

import proto "github.com/gogo/protobuf/proto"
import golang_proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import strconv "strconv"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type GatewayDownlinkPathConstraint int32

const (
	// Indicates that the gateway can be selected for downlink without constraints by the Network Server.
	NONE GatewayDownlinkPathConstraint = 0
	// Indicates that the gateway can be selected for downlink only if no other or better gateway can be selected.
	PREFER_OTHER GatewayDownlinkPathConstraint = 1
	// Indicates that this gateway will never be selected for downlink, even if that results in no available downlink path.
	NEVER GatewayDownlinkPathConstraint = 2
)

var GatewayDownlinkPathConstraint_name = map[int32]string{
	0: "NONE",
	1: "PREFER_OTHER",
	2: "NEVER",
}
var GatewayDownlinkPathConstraint_value = map[string]int32{
	"NONE":         0,
	"PREFER_OTHER": 1,
	"NEVER":        2,
}

func (GatewayDownlinkPathConstraint) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_enums_c8c15b9cbafe0c0d, []int{0}
}

// State enum defines states that an entity can be in.
type State int32

const (
	// Denotes that the entity has been requested and is pending review by an admin.
	STATE_REQUESTED State = 0
	// Denotes that the entity has been reviewed and approved by an admin.
	STATE_APPROVED State = 1
	// Denotes that the entity has been reviewed and rejected by an admin.
	STATE_REJECTED State = 2
	// Denotes that the entity has been flagged and is pending review by an admin.
	STATE_FLAGGED State = 3
	// Denotes that the entity has been reviewed and suspended by an admin.
	STATE_SUSPENDED State = 4
)

var State_name = map[int32]string{
	0: "STATE_REQUESTED",
	1: "STATE_APPROVED",
	2: "STATE_REJECTED",
	3: "STATE_FLAGGED",
	4: "STATE_SUSPENDED",
}
var State_value = map[string]int32{
	"STATE_REQUESTED": 0,
	"STATE_APPROVED":  1,
	"STATE_REJECTED":  2,
	"STATE_FLAGGED":   3,
	"STATE_SUSPENDED": 4,
}

func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_enums_c8c15b9cbafe0c0d, []int{1}
}

func init() {
	proto.RegisterEnum("ttn.lorawan.v3.GatewayDownlinkPathConstraint", GatewayDownlinkPathConstraint_name, GatewayDownlinkPathConstraint_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.GatewayDownlinkPathConstraint", GatewayDownlinkPathConstraint_name, GatewayDownlinkPathConstraint_value)
	proto.RegisterEnum("ttn.lorawan.v3.State", State_name, State_value)
	golang_proto.RegisterEnum("ttn.lorawan.v3.State", State_name, State_value)
}
func (x GatewayDownlinkPathConstraint) String() string {
	s, ok := GatewayDownlinkPathConstraint_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x State) String() string {
	s, ok := State_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

func init() {
	proto.RegisterFile("lorawan-stack/api/enums.proto", fileDescriptor_enums_c8c15b9cbafe0c0d)
}
func init() {
	golang_proto.RegisterFile("lorawan-stack/api/enums.proto", fileDescriptor_enums_c8c15b9cbafe0c0d)
}

var fileDescriptor_enums_c8c15b9cbafe0c0d = []byte{
	// 398 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x31, 0x4f, 0xdb, 0x50,
	0x10, 0xc7, 0xef, 0x68, 0xa8, 0xda, 0xa7, 0x96, 0xba, 0xaf, 0x1b, 0x12, 0xf7, 0x01, 0x50, 0xb1,
	0x07, 0x3e, 0x41, 0x8a, 0x1f, 0xa9, 0x2a, 0x94, 0xb8, 0x76, 0x60, 0xe8, 0x82, 0x5e, 0x90, 0xeb,
	0x58, 0x81, 0xf7, 0x22, 0xe7, 0xd2, 0xa8, 0x1b, 0x63, 0xc6, 0x8e, 0x1d, 0xab, 0x76, 0x61, 0x64,
	0x64, 0x64, 0x64, 0x64, 0x64, 0xc4, 0xef, 0x2d, 0x8c, 0x8c, 0x8c, 0x55, 0xed, 0x4a, 0x88, 0xed,
	0xfe, 0x3f, 0xfd, 0xee, 0x4e, 0xba, 0x13, 0x1b, 0xc7, 0xb6, 0xd2, 0x0b, 0x6d, 0xb6, 0x66, 0xac,
	0x8f, 0x26, 0x91, 0x9e, 0x96, 0x51, 0x6e, 0xe6, 0x27, 0xb3, 0x70, 0x5a, 0x59, 0xb6, 0x72, 0x8d,
	0xd9, 0x84, 0xff, 0x95, 0xf0, 0xdb, 0xf6, 0xfa, 0x56, 0x51, 0xf2, 0x78, 0x3e, 0x0a, 0x8f, 0xec,
	0x49, 0x54, 0xd8, 0xc2, 0x46, 0x8d, 0x36, 0x9a, 0x7f, 0x6d, 0x52, 0x13, 0x9a, 0xaa, 0x6d, 0xdf,
	0xdc, 0x13, 0x1b, 0x3d, 0xcd, 0xf9, 0x42, 0x7f, 0x8f, 0xed, 0xc2, 0x1c, 0x97, 0x66, 0x92, 0x68,
	0x1e, 0xef, 0x58, 0x33, 0xe3, 0x4a, 0x97, 0x86, 0xe5, 0x0b, 0xd1, 0xe9, 0x0f, 0xfa, 0x2a, 0x00,
	0x19, 0x88, 0x57, 0x49, 0xaa, 0x76, 0x55, 0x7a, 0x38, 0x18, 0x7e, 0x54, 0x69, 0x80, 0xf2, 0xa5,
	0x58, 0xed, 0xab, 0x03, 0x95, 0x06, 0x2b, 0xeb, 0x9d, 0xe5, 0x1f, 0x82, 0xcd, 0x4a, 0xac, 0x66,
	0xac, 0x39, 0x97, 0xef, 0xc4, 0x9b, 0x6c, 0xd8, 0x1d, 0xaa, 0xc3, 0x54, 0x7d, 0xde, 0x57, 0xd9,
	0x50, 0xc5, 0x01, 0x48, 0x29, 0xd6, 0x5a, 0xd8, 0x4d, 0x92, 0x74, 0x70, 0xa0, 0xe2, 0x00, 0x1f,
	0x59, 0xaa, 0x3e, 0xa9, 0x9d, 0x7f, 0xde, 0x8a, 0x7c, 0x2b, 0x5e, 0xb7, 0x6c, 0x77, 0xaf, 0xdb,
	0xeb, 0xa9, 0x38, 0x78, 0xf6, 0x38, 0x2f, 0xdb, 0xcf, 0x12, 0xd5, 0x8f, 0x55, 0x1c, 0x74, 0xda,
	0x9d, 0x1f, 0x7e, 0xe3, 0x55, 0x4d, 0x78, 0x5d, 0x13, 0xde, 0xd4, 0x04, 0xb7, 0x35, 0xc1, 0x5d,
	0x4d, 0x70, 0x5f, 0x13, 0x3c, 0xd4, 0x84, 0xa7, 0x8e, 0x70, 0xe9, 0x08, 0xce, 0x1c, 0xe1, 0xb9,
	0x23, 0xb8, 0x70, 0x04, 0x97, 0x8e, 0xe0, 0xca, 0x11, 0x5e, 0x3b, 0xc2, 0x1b, 0x47, 0x70, 0xeb,
	0x08, 0xef, 0x1c, 0xc1, 0xbd, 0x23, 0x7c, 0x70, 0x04, 0xa7, 0x9e, 0x60, 0xe9, 0x09, 0x7f, 0x78,
	0x82, 0x9f, 0x9e, 0xf0, 0x97, 0x27, 0x38, 0xf3, 0x04, 0xe7, 0x9e, 0xf0, 0xc2, 0x13, 0x5e, 0x7a,
	0xc2, 0x2f, 0xef, 0x0b, 0x1b, 0xf2, 0x38, 0xe7, 0x71, 0x69, 0x8a, 0x59, 0x68, 0x72, 0x5e, 0xd8,
	0x6a, 0x12, 0x3d, 0xfd, 0xd5, 0x74, 0x52, 0x44, 0xcc, 0x66, 0x3a, 0x1a, 0x3d, 0x6f, 0xae, 0xbd,
	0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0x1c, 0x99, 0x48, 0x4d, 0xcd, 0x01, 0x00, 0x00,
}
