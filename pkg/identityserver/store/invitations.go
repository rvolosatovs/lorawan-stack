// Copyright Â© 2018 The Things Network Foundation, distributed under the MIT license (see LICENSE file)

package store

import "time"

// InvitationData is the data stored for an invitation.
type InvitationData struct {
	// ID is the autogenerated and unique invitation's ID.
	ID string

	// Token is the unique invitation token.
	Token string

	// Email is the email the invitation was sent at.
	Email string

	// SentAt is the time when the invitation was sent.
	SentAt time.Time

	// UsedAt is the time when the invitation was used.
	UsedAt *time.Time

	// TTL is the time in seconds the invitation is valid after being sent.
	TTL uint32

	// UserID is the user's ID of the created account from the invitation.
	UserID *string
}

// GetUserID returns the user's ID if there is one or empty string otherwise.
func (d *InvitationData) GetUserID() string {
	if d.UserID == nil {
		return ""
	}
	return *(d.UserID)
}

// InvitationStore is the store that holds invitations.
type InvitationStore interface {
	// Save saves the invitation.
	Save(data *InvitationData) error

	// Use sets `used_at` to the current timestamp and links the invitation to an user ID.
	Use(token, userID string) error

	// Lists list all the saved invitations.
	List() ([]*InvitationData, error)

	// Delete deletes an invitation by its ID.
	Delete(ID string) error
}
