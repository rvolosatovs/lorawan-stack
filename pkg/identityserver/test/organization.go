// Copyright Â© 2018 The Things Network Foundation, The Things Industries B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package test

import (
	"fmt"
	"time"

	"github.com/smartystreets/assertions"
	"go.thethings.network/lorawan-stack/pkg/identityserver/store"
	"go.thethings.network/lorawan-stack/pkg/ttnpb"
)

func defaultOrganization(in interface{}) (*ttnpb.Organization, error) {
	if org, ok := in.(store.Organization); ok {
		return org.GetOrganization(), nil
	}

	if org, ok := in.(ttnpb.Organization); ok {
		return &org, nil
	}

	if ptr, ok := in.(*ttnpb.Organization); ok {
		return ptr, nil
	}

	return nil, fmt.Errorf("Expected: '%v' to be of type ttnpb.Organization but it was not", in)
}

// ShouldBeOrganization checks if two Organizations resemble each other.
func ShouldBeOrganization(actual interface{}, expected ...interface{}) string {
	if len(expected) != 1 {
		return fmt.Sprintf("Expected: one organization to match but got %v", len(expected))
	}

	a, s := defaultOrganization(actual)
	if s != nil {
		return s.Error()
	}

	b, s := defaultOrganization(expected[0])
	if s != nil {
		return s.Error()
	}

	return all(
		ShouldBeOrganizationIgnoringAutoFields(a, b),
		assertions.ShouldHappenWithin(a.CreatedAt, time.Millisecond, b.CreatedAt),
		assertions.ShouldHappenWithin(a.UpdatedAt, time.Millisecond, b.UpdatedAt),
	)
}

// ShouldBeOrganizationIgnoringAutoFields checks if two Organizations resemble
// each other without looking at fields that are generated by the database:
// `CreatedAt` and `UpdatedAt`.
func ShouldBeOrganizationIgnoringAutoFields(actual interface{}, expected ...interface{}) string {
	if len(expected) != 1 {
		return fmt.Sprintf("Expected: one organization to match but got %v", len(expected))
	}

	a, s := defaultOrganization(actual)
	if s != nil {
		return s.Error()
	}

	b, s := defaultOrganization(expected[0])
	if s != nil {
		return s.Error()
	}

	return all(
		assertions.ShouldEqual(a.OrganizationID, b.OrganizationID),
		assertions.ShouldEqual(a.Name, b.Name),
		assertions.ShouldEqual(a.Description, b.Description),
		assertions.ShouldEqual(a.URL, b.URL),
		assertions.ShouldEqual(a.Location, b.Location),
		assertions.ShouldEqual(a.Email, b.Email),
	)
}
