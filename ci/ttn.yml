resources:

- name: ttn-src
  type: git
  source:
    uri: ((git-repo))
    branch: master
    private_key: ((git-repo-key))

- name: ttn-bin
  type: s3
  source:
    endpoint: ((s3-url))
    bucket: ((s3-bucket))
    regexp: ttn-(.*).tar.gz
    access_key_id: ((s3-access-key))
    secret_access_key: ((s3-secret-key))

- name: alpine-3.6
  type: docker-image
  source:
    repository: alpine
    tag: '3.6'

- name: ttn-docker
  type: docker-image
  source:
    repository: ((docker-repository))
    username: ((docker-username))
    password: ((docker-password))

jobs:

- name: go-test
  public: true
  plan:
  - get: ttn-src
    trigger: true
  - task: go-deps
    file: ttn-src/ci/go-deps.yml
  - aggregate:
    - task: go-test-amd64
      file: ttn-src/ci/go-test.yml
      params:
        TEST_GOARCH: amd64
    - task: go-test-386
      file: ttn-src/ci/go-test.yml
      params:
        TEST_GOARCH: '386'

- name: go-build
  public: true
  plan:
  - get: ttn-src
    trigger: true
    passed: [go-test]
  - task: go-deps
    attempts: 3
    file: ttn-src/ci/go-deps.yml
  - aggregate:
    - task: go-build-linux-amd64
      file: ttn-src/ci/go-build.yml
      params: { BUILD_GOOS: linux, BUILD_GOARCH: amd64 }
      output_mapping: { ttn-binary: ttn-linux-amd64 }
    - task: go-build-linux-386
      file: ttn-src/ci/go-build.yml
      params: { BUILD_GOOS: linux, BUILD_GOARCH: '386' }
      output_mapping: { ttn-binary: ttn-linux-386 }
    - task: go-build-linux-arm
      file: ttn-src/ci/go-build.yml
      params: { BUILD_GOOS: linux, BUILD_GOARCH: 'arm' }
      output_mapping: { ttn-binary: ttn-linux-arm }
    - task: go-build-linux-arm64
      file: ttn-src/ci/go-build.yml
      params: { BUILD_GOOS: linux, BUILD_GOARCH: 'arm64' }
      output_mapping: { ttn-binary: ttn-linux-arm64 }
    - task: go-build-darwin-amd64
      file: ttn-src/ci/go-build.yml
      params: { BUILD_GOOS: darwin, BUILD_GOARCH: amd64 }
      output_mapping: { ttn-binary: ttn-darwin-amd64 }
    - task: go-build-windows-amd64
      file: ttn-src/ci/go-build.yml
      params: { BUILD_GOOS: windows, BUILD_GOARCH: amd64 }
      output_mapping: { ttn-binary: ttn-windows-amd64 }
    - task: go-build-windows-386
      file: ttn-src/ci/go-build.yml
      params: { BUILD_GOOS: windows, BUILD_GOARCH: '386' }
      output_mapping: { ttn-binary: ttn-windows-386 }
  - task: bin-merge
    file: ttn-src/ci/bin-merge.yml
  - put: ttn-bin
    params:
      file: ttn-bin/ttn-*.tar.gz

- name: docker-build
  public: true
  plan:
  - aggregate:
    - get: ttn-src
    - get: alpine-3.6
      params: { save: true }
      trigger: true
    - get: ttn-bin
      params: { unpack: true }
      trigger: true
      passed: [go-build]
  - put: ttn-docker
    params:
      build: '.'
      dockerfile: ttn-src/Dockerfile
      load_base: alpine-3.6
      build_args:
        release_dir: ttn-bin
